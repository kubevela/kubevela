{
	"swagger": "2.0",
	"info": {
		"description": "Kubevela api doc",
		"title": "Kubevela api doc",
		"contact": {
			"name": "kubevela",
			"url": "https://kubevela.io/",
			"email": "feedback@mail.kubevela.io"
		},
		"license": {
			"name": "Apache License 2.0",
			"url": "https://github.com/oam-dev/kubevela/blob/master/LICENSE"
		},
		"version": "v1beta1"
	},
	"paths": {
		"/api/v1/addon_registries": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"addon_registry"
				],
				"summary": "list all addon registry",
				"operationId": "listAddonRegistry",
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ListAddonRegistryResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			},
			"post": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"addon_registry"
				],
				"summary": "create an addon registry",
				"operationId": "createAddonRegistry",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.CreateAddonRegistryRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.AddonRegistry"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/addon_registries/{addonRegName}": {
			"put": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"addon_registry"
				],
				"summary": "update an addon registry",
				"operationId": "updateAddonRegistry",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.UpdateAddonRegistryRequest"
						}
					},
					{
						"type": "string",
						"description": "identifier of the addon registry",
						"name": "addonRegName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.AddonRegistry"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			},
			"delete": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"addon_registry"
				],
				"summary": "delete an addon registry",
				"operationId": "deleteAddonRegistry",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the addon registry",
						"name": "addonRegName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.AddonRegistry"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/addons": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"addon"
				],
				"summary": "list all addons",
				"operationId": "listAddons",
				"parameters": [
					{
						"type": "string",
						"description": "filter addons from given registry",
						"name": "registry",
						"in": "query"
					},
					{
						"type": "string",
						"description": "Fuzzy search based on name and description.",
						"name": "query",
						"in": "query"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ListAddonResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/addons/{addonName}": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"addon"
				],
				"summary": "show details of an addon",
				"operationId": "detailAddon",
				"parameters": [
					{
						"type": "string",
						"description": "addon name to query detail",
						"name": "name",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "specify addon version to enable",
						"name": "version",
						"in": "query"
					},
					{
						"type": "string",
						"description": "addon name to query detail",
						"name": "addonName",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "filter addons from given registry",
						"name": "registry",
						"in": "query"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.DetailAddonResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/addons/{addonName}/disable": {
			"post": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"addon"
				],
				"summary": "disable an addon",
				"operationId": "disableAddon",
				"parameters": [
					{
						"type": "string",
						"description": "addon name to enable",
						"name": "addonName",
						"in": "path",
						"required": true
					},
					{
						"type": "boolean",
						"description": "force disable an addon",
						"name": "force",
						"in": "query"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.AddonStatusResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/addons/{addonName}/enable": {
			"post": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"addon"
				],
				"summary": "enable an addon",
				"operationId": "enableAddon",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.EnableAddonRequest"
						}
					},
					{
						"type": "string",
						"description": "addon name to enable",
						"name": "addonName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.AddonStatusResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/addons/{addonName}/status": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"addon"
				],
				"summary": "show status of an addon",
				"operationId": "statusAddon",
				"parameters": [
					{
						"type": "string",
						"description": "addon name to query status",
						"name": "addonName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.AddonStatusResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/addons/{addonName}/update": {
			"put": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"addon"
				],
				"summary": "update an addon",
				"operationId": "updateAddon",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.EnableAddonRequest"
						}
					},
					{
						"type": "string",
						"description": "addon name to update",
						"name": "addonName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.AddonStatusResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/applications": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "list all applications",
				"operationId": "listApplications",
				"parameters": [
					{
						"type": "string",
						"description": "Fuzzy search based on name or description",
						"name": "query",
						"in": "query"
					},
					{
						"type": "string",
						"description": "search base on project name",
						"name": "project",
						"in": "query"
					},
					{
						"type": "string",
						"description": "search base on env name",
						"name": "env",
						"in": "query"
					},
					{
						"type": "string",
						"description": "Name of the application delivery target",
						"name": "targetName",
						"in": "query"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ListApplicationResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			},
			"post": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "create one application ",
				"operationId": "createApplication",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.CreateApplicationRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ApplicationBase"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/applications/{appName}": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "detail one application ",
				"operationId": "detailApplication",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application ",
						"name": "appName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.DetailApplicationResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			},
			"put": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "update one application ",
				"operationId": "updateApplication",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application ",
						"name": "appName",
						"in": "path",
						"required": true
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.UpdateApplicationRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ApplicationBase"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			},
			"delete": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "delete one application",
				"operationId": "deleteApplication",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application ",
						"name": "appName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.EmptyResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/applications/{appName}/compare": {
			"post": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "compare application with env latest revision",
				"operationId": "compareAppWithLatestRevision",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application ",
						"name": "appName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ApplicationBase"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/applications/{appName}/components": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "gets the list of application components",
				"operationId": "listApplicationComponents",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application ",
						"name": "appName",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "list components that deployed in define env",
						"name": "envName",
						"in": "query"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ComponentListResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			},
			"post": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "create component  for application ",
				"operationId": "createComponent",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application ",
						"name": "appName",
						"in": "path",
						"required": true
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.CreateComponentRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ComponentBase"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/applications/{appName}/components/{compName}": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "detail component for application ",
				"operationId": "detailComponent",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application ",
						"name": "appName",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the component",
						"name": "compName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.DetailComponentResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			},
			"put": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "update component config",
				"operationId": "updateComponent",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application",
						"name": "appName",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the component",
						"name": "compName",
						"in": "path",
						"required": true
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.UpdateApplicationComponentRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ComponentBase"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			},
			"delete": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "delete a component",
				"operationId": "deleteComponent",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application",
						"name": "appName",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the component",
						"name": "compName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.EmptyResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					},
					"404": {
						"description": "Not Found",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/applications/{appName}/components/{compName}/traits": {
			"post": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "add trait for a component",
				"operationId": "addApplicationTrait",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application",
						"name": "appName",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the component",
						"name": "compName",
						"in": "path",
						"required": true
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.CreateApplicationTraitRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.EmptyResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/applications/{appName}/components/{compName}/traits/{traitType}": {
			"put": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "update trait from a component",
				"operationId": "updateApplicationTrait",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application",
						"name": "appName",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the component",
						"name": "compName",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the type of trait",
						"name": "traitType",
						"in": "path",
						"required": true
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.UpdateApplicationTraitRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ApplicationTrait"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			},
			"delete": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "delete trait from a component",
				"operationId": "deleteApplicationTrait",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application",
						"name": "appName",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the component",
						"name": "compName",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the type of trait",
						"name": "traitType",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ApplicationTrait"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/applications/{appName}/deploy": {
			"post": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "deploy or upgrade the application",
				"operationId": "deployApplication",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application ",
						"name": "appName",
						"in": "path",
						"required": true
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.ApplicationDeployRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ApplicationDeployResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/applications/{appName}/dry-run": {
			"post": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "dry-run application to latest revision",
				"operationId": "dryRunAppOrRevision",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application ",
						"name": "appName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.AppDryRunResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/applications/{appName}/envs": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "list policy for application",
				"operationId": "listApplicationEnvs",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application ",
						"name": "appName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ListApplicationEnvBinding"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			},
			"post": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "creating an application environment ",
				"operationId": "createApplicationEnv",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application ",
						"name": "appName",
						"in": "path",
						"required": true
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.CreateApplicationEnvbindingRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.EnvBinding"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/applications/{appName}/envs/{envName}": {
			"put": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "set application  differences in the specified environment",
				"operationId": "updateApplicationEnv",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application ",
						"name": "appName",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the envBinding ",
						"name": "envName",
						"in": "path",
						"required": true
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.PutApplicationEnvBindingRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.EnvBinding"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			},
			"delete": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "delete an application environment ",
				"operationId": "deleteApplicationEnv",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application ",
						"name": "appName",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the envBinding ",
						"name": "envName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.EmptyResponse"
						}
					},
					"404": {
						"description": "Not Found",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/applications/{appName}/envs/{envName}/recycle": {
			"post": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "get application status",
				"operationId": "recycleApplicationEnv",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application ",
						"name": "appName",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the application envbinding",
						"name": "envName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.EmptyResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/applications/{appName}/envs/{envName}/status": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "get application status",
				"operationId": "getApplicationStatus",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application ",
						"name": "appName",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the application envbinding",
						"name": "envName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ApplicationStatusResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/applications/{appName}/policies": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "list policy for application",
				"operationId": "listApplicationPolicies",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application ",
						"name": "appName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ListApplicationPolicy"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			},
			"post": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "create policy for application",
				"operationId": "createApplicationPolicy",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application",
						"name": "appName",
						"in": "path",
						"required": true
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.CreatePolicyRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.PolicyBase"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/applications/{appName}/policies/{policyName}": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "detail policy for application",
				"operationId": "detailApplicationPolicy",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application",
						"name": "appName",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the application policy",
						"name": "policyName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.DetailPolicyResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			},
			"put": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "update policy for application",
				"operationId": "updateApplicationPolicy",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application",
						"name": "appName",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the application policy",
						"name": "policyName",
						"in": "path",
						"required": true
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.UpdatePolicyRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.DetailPolicyResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			},
			"delete": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "detail policy for application",
				"operationId": "deleteApplicationPolicy",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application",
						"name": "appName",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the application policy",
						"name": "policyName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.EmptyResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/applications/{appName}/records": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "list application records",
				"operationId": "listApplicationRecords",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application.",
						"name": "appName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/applications/{appName}/reset": {
			"post": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "reset application to latest revision",
				"operationId": "resetAppToLatestRevision",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application ",
						"name": "appName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.AppResetResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/applications/{appName}/revisions": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "list revisions for application",
				"operationId": "listApplicationRevisions",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application ",
						"name": "appName",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "query identifier of the env",
						"name": "envName",
						"in": "query"
					},
					{
						"type": "string",
						"description": "query identifier of the status",
						"name": "status",
						"in": "query"
					},
					{
						"type": "integer",
						"description": "query the page number",
						"name": "page",
						"in": "query"
					},
					{
						"type": "integer",
						"description": "query the page size number",
						"name": "pageSize",
						"in": "query"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ListRevisionsResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/applications/{appName}/revisions/{revision}": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "detail revision for application",
				"operationId": "detailApplicationRevision",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application",
						"name": "appName",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the application revision",
						"name": "revision",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.DetailRevisionResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/applications/{appName}/statistics": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "detail one application ",
				"operationId": "applicationStatistics",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application ",
						"name": "appName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ApplicationStatisticsResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/applications/{appName}/template": {
			"post": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "create one application template",
				"operationId": "publishApplicationTemplate",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application ",
						"name": "appName",
						"in": "path",
						"required": true
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.CreateApplicationTemplateRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ApplicationTemplateBase"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/applications/{appName}/triggers": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "list application triggers",
				"operationId": "listApplicationTriggers",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application ",
						"name": "appName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ListApplicationTriggerResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			},
			"post": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "create one application trigger",
				"operationId": "createApplicationTrigger",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application ",
						"name": "appName",
						"in": "path",
						"required": true
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.CreateApplicationTriggerRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ApplicationTriggerBase"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/applications/{appName}/triggers/{token}": {
			"delete": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "delete one application trigger",
				"operationId": "deleteApplicationTrigger",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application ",
						"name": "appName",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the trigger",
						"name": "token",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.EmptyResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/applications/{appName}/workflows": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "list application workflow",
				"operationId": "listApplicationWorkflows",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application.",
						"name": "appName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.SimpleResponse"
						}
					},
					"500": {
						"description": "Bummer, something went wrong"
					}
				}
			},
			"post": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "create application workflow",
				"operationId": "createOrUpdateApplicationWorkflow",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.CreateWorkflowRequest"
						}
					},
					{
						"type": "string",
						"description": "identifier of the application.",
						"name": "appName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.SimpleResponse"
						}
					},
					"400": {
						"description": "create failure",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					},
					"500": {
						"description": "Bummer, something went wrong"
					}
				}
			}
		},
		"/api/v1/applications/{appName}/workflows/{workflowName}": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "detail application workflow",
				"operationId": "detailWorkflow",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application.",
						"name": "appName",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the workfloc.",
						"name": "workflowName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.SimpleResponse"
						}
					},
					"500": {
						"description": "Bummer, something went wrong"
					}
				}
			},
			"put": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "update application workflow config",
				"operationId": "updateWorkflow",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application.",
						"name": "appName",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the workflow",
						"name": "workflowName",
						"in": "path",
						"required": true
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.UpdateWorkflowRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.SimpleResponse"
						}
					},
					"500": {
						"description": "Bummer, something went wrong"
					}
				}
			},
			"delete": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "deletet workflow",
				"operationId": "deleteWorkflow",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application.",
						"name": "appName",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the workflow",
						"name": "workflowName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.SimpleResponse"
						}
					},
					"500": {
						"description": "Bummer, something went wrong"
					}
				}
			}
		},
		"/api/v1/applications/{appName}/workflows/{workflowName}/records": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "query application workflow execution record",
				"operationId": "listWorkflowRecords",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application.",
						"name": "appName",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the workflow",
						"name": "workflowName",
						"in": "path",
						"required": true
					},
					{
						"type": "integer",
						"description": "query the page number",
						"name": "page",
						"in": "query"
					},
					{
						"type": "integer",
						"description": "query the page size number",
						"name": "pageSize",
						"in": "query"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.SimpleResponse"
						}
					},
					"500": {
						"description": "Bummer, something went wrong"
					}
				}
			}
		},
		"/api/v1/applications/{appName}/workflows/{workflowName}/records/{record}": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "query application workflow execution record detail",
				"operationId": "detailWorkflowRecord",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application.",
						"name": "appName",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the workflow",
						"name": "workflowName",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the workflow record",
						"name": "record",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.SimpleResponse"
						}
					},
					"500": {
						"description": "Bummer, something went wrong"
					}
				}
			}
		},
		"/api/v1/applications/{appName}/workflows/{workflowName}/records/{record}/resume": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "resume suspend workflow record",
				"operationId": "resumeWorkflowRecord",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application.",
						"name": "appName",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the workflow",
						"name": "workflowName",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the  workflow record",
						"name": "record",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/applications/{appName}/workflows/{workflowName}/records/{record}/rollback": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "rollback suspend application record",
				"operationId": "rollbackWorkflowRecord",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application.",
						"name": "appName",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the workflow",
						"name": "workflowName",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the workflow record",
						"name": "record",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the rollback revision",
						"name": "rollbackVersion",
						"in": "query"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/applications/{appName}/workflows/{workflowName}/records/{record}/terminate": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"application"
				],
				"summary": "terminate suspend workflow record",
				"operationId": "terminateWorkflowRecord",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application.",
						"name": "appName",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the workflow",
						"name": "workflowName",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the workflow record",
						"name": "record",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/auth/dex_config": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"authentication"
				],
				"summary": "get Dex config",
				"operationId": "getDexConfig",
				"responses": {
					"200": {
						"schema": {
							"$ref": "#/definitions/v1.DexConfigResponse"
						}
					},
					"400": {
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/auth/login": {
			"post": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"authentication"
				],
				"summary": "handle login request",
				"operationId": "login",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.LoginRequest"
						}
					}
				],
				"responses": {
					"200": {
						"schema": {
							"$ref": "#/definitions/v1.LoginResponse"
						}
					},
					"400": {
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/auth/login_type": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"authentication"
				],
				"summary": "get login type",
				"operationId": "getLoginType",
				"responses": {
					"200": {
						"schema": {
							"$ref": "#/definitions/v1.GetLoginTypeResponse"
						}
					},
					"400": {
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/auth/refresh_token": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"authentication"
				],
				"summary": "refresh token",
				"operationId": "refreshToken",
				"responses": {
					"200": {
						"schema": {
							"$ref": "#/definitions/v1.RefreshTokenResponse"
						}
					},
					"400": {
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/auth/user_info": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"authentication"
				],
				"summary": "get login user detail info",
				"operationId": "getLoginUserInfo",
				"responses": {
					"200": {
						"schema": {
							"$ref": "#/definitions/v1.LoginUserInfoResponse"
						}
					},
					"400": {
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/clusters": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"cluster"
				],
				"summary": "list all clusters",
				"operationId": "listKubeClusters",
				"parameters": [
					{
						"type": "string",
						"description": "Fuzzy search based on name or description",
						"name": "query",
						"in": "query"
					},
					{
						"type": "integer",
						"default": 0,
						"description": "Page for paging",
						"name": "page",
						"in": "query"
					},
					{
						"type": "integer",
						"default": 20,
						"description": "PageSize for paging",
						"name": "pageSize",
						"in": "query"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.SimpleResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					},
					"500": {
						"description": "Bummer, something went wrong"
					}
				}
			},
			"post": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"cluster"
				],
				"summary": "create cluster",
				"operationId": "createKubeCluster",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.CreateClusterRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ClusterBase"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/clusters/cloud_clusters/{provider}": {
			"post": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"cluster"
				],
				"summary": "list cloud clusters",
				"operationId": "listCloudClusters",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the cloud provider",
						"name": "provider",
						"in": "path",
						"required": true
					},
					{
						"type": "integer",
						"default": 0,
						"description": "Page for paging",
						"name": "page",
						"in": "query"
					},
					{
						"type": "integer",
						"default": 20,
						"description": "PageSize for paging",
						"name": "pageSize",
						"in": "query"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.AccessKeyRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ListCloudClusterResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/clusters/cloud_clusters/{provider}/connect": {
			"post": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"cluster"
				],
				"summary": "create cluster from cloud cluster",
				"operationId": "connectCloudCluster",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the cloud provider",
						"name": "provider",
						"in": "path",
						"required": true
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.ConnectCloudClusterRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ClusterBase"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/clusters/cloud_clusters/{provider}/create": {
			"post": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"cluster"
				],
				"summary": "create cloud cluster",
				"operationId": "createCloudCluster",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the cloud provider",
						"name": "provider",
						"in": "path",
						"required": true
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.CreateCloudClusterRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.CreateCloudClusterResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/clusters/cloud_clusters/{provider}/creation": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"cluster"
				],
				"summary": "list cloud cluster creation",
				"operationId": "listCloudClusterCreation",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the cloud provider",
						"name": "provider",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ListCloudClusterCreationResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/clusters/cloud_clusters/{provider}/creation/{cloudClusterName}": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"cluster"
				],
				"summary": "check cloud cluster create status",
				"operationId": "getCloudClusterCreationStatus",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the cloud provider",
						"name": "provider",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier for cloud cluster which is creating",
						"name": "cloudClusterName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.CreateCloudClusterResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			},
			"delete": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"cluster"
				],
				"summary": "delete cloud cluster creation",
				"operationId": "deleteCloudClusterCreation",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the cloud provider",
						"name": "provider",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier for cloud cluster which is creating",
						"name": "cloudClusterName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.CreateCloudClusterResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/clusters/{clusterName}": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"cluster"
				],
				"summary": "detail cluster info",
				"operationId": "getKubeCluster",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the cluster",
						"name": "clusterName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.DetailClusterResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			},
			"put": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"cluster"
				],
				"summary": "modify cluster",
				"operationId": "modifyKubeCluster",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the cluster",
						"name": "clusterName",
						"in": "path",
						"required": true
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.CreateClusterRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ClusterBase"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			},
			"delete": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"cluster"
				],
				"summary": "delete cluster",
				"operationId": "deleteKubeCluster",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the cluster",
						"name": "clusterName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ClusterBase"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/clusters/{clusterName}/namespaces": {
			"post": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"cluster"
				],
				"summary": "create namespace in cluster",
				"operationId": "createNamespace",
				"parameters": [
					{
						"type": "string",
						"description": "name of the target cluster",
						"name": "clusterName",
						"in": "path",
						"required": true
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.CreateClusterNamespaceRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.CreateClusterNamespaceResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/config_types": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"config"
				],
				"summary": "list all config types",
				"operationId": "listConfigTypes",
				"parameters": [
					{
						"type": "string",
						"description": "Fuzzy search based on name and description.",
						"name": "query",
						"in": "query"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/v1.ConfigType"
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/config_types/{configType}": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"config"
				],
				"summary": "get a config type",
				"operationId": "getConfigType",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the config type",
						"name": "configType",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ConfigType"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			},
			"post": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"config"
				],
				"summary": "create or update a config",
				"operationId": "createConfig",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the config type",
						"name": "configType",
						"in": "path",
						"required": true
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.CreateConfigRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.EmptyResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					},
					"404": {
						"description": "Not Found",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/config_types/{configType}/configs": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"config"
				],
				"summary": "get configs from a config type",
				"operationId": "getConfigs",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the config",
						"name": "configType",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/*v1.Config"
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/config_types/{configType}/configs/{name}": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"config"
				],
				"summary": "get a config from a config type",
				"operationId": "getConfig",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the config type",
						"name": "configType",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the config",
						"name": "name",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/*v1.Config"
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			},
			"delete": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"config"
				],
				"summary": "delete a config",
				"operationId": "deleteConfig",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the config type",
						"name": "configType",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the config",
						"name": "name",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.EmptyResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					},
					"404": {
						"description": "Not Found",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/definitions": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"definition"
				],
				"summary": "list all definitions",
				"operationId": "listDefinitions",
				"parameters": [
					{
						"enum": [
							"component",
							"trait",
							"workflowstep"
						],
						"type": "string",
						"description": "query the definition type",
						"name": "type",
						"in": "query",
						"required": true
					},
					{
						"type": "string",
						"description": "if specified, query the definition supported by the env.",
						"name": "envName",
						"in": "query"
					},
					{
						"type": "string",
						"description": "if specified, query the trait definition applied to the workload.",
						"name": "appliedWorkload",
						"in": "query"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.SimpleResponse"
						}
					},
					"500": {
						"description": "Bummer, something went wrong"
					}
				}
			}
		},
		"/api/v1/definitions/{definitionName}": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"definition"
				],
				"summary": "detail definition",
				"operationId": "detailDefinition",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the definition",
						"name": "definitionName",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "query the definition type",
						"name": "type",
						"in": "query"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.SimpleResponse"
						}
					},
					"500": {
						"description": "Bummer, something went wrong"
					}
				}
			}
		},
		"/api/v1/enabled_addon": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"addon"
				],
				"summary": "list all addons",
				"operationId": "list",
				"parameters": [
					{
						"type": "string",
						"description": "filter addons from given registry",
						"name": "registry",
						"in": "query"
					},
					{
						"type": "string",
						"description": "Fuzzy search based on name and description.",
						"name": "query",
						"in": "query"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ListAddonResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/envs": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"env"
				],
				"summary": "list all envs",
				"operationId": "envlist",
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ListEnvResponse"
						}
					}
				}
			},
			"post": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"env"
				],
				"summary": "create an env",
				"operationId": "envcreate",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.CreateEnvRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.Env"
						}
					}
				}
			}
		},
		"/api/v1/envs/{envName}": {
			"put": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"env"
				],
				"summary": "update an env",
				"operationId": "envupdate",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application ",
						"name": "envName",
						"in": "path",
						"required": true
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.CreateEnvRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.Env"
						}
					}
				}
			},
			"delete": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"env"
				],
				"summary": "delete one env",
				"operationId": "envdelete",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the application ",
						"name": "envName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.EmptyResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/payload_types": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"payload_types"
				],
				"summary": "list application trigger payload types",
				"operationId": "ListPayloadTypes",
				"responses": {
					"200": {
						"description": "OK"
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/permissions": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"rbac"
				],
				"summary": "list all project level perm policies",
				"operationId": "listPlatformPermissions",
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/v1.PermissionBase"
							}
						}
					}
				}
			}
		},
		"/api/v1/policy_definitions": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"definition"
				],
				"summary": "list all policydefinition",
				"operationId": "noop",
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ListPolicyDefinitionResponse"
						}
					}
				}
			}
		},
		"/api/v1/projects": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"project"
				],
				"summary": "list all projects",
				"operationId": "listprojects",
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ListProjectResponse"
						}
					}
				}
			},
			"post": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"project"
				],
				"summary": "create a project",
				"operationId": "createproject",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.CreateProjectRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ProjectBase"
						}
					}
				}
			}
		},
		"/api/v1/projects/{projectName}": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"project"
				],
				"summary": "detail a project",
				"operationId": "detailProject",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the project",
						"name": "projectName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ProjectBase"
						}
					}
				}
			},
			"put": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"project"
				],
				"summary": "update a project",
				"operationId": "updateProject",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the project",
						"name": "projectName",
						"in": "path",
						"required": true
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.UpdateProjectRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ProjectBase"
						}
					}
				}
			},
			"delete": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"project"
				],
				"summary": "delete a project",
				"operationId": "deleteProject",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the project",
						"name": "projectName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.EmptyResponse"
						}
					}
				}
			}
		},
		"/api/v1/projects/{projectName}/configs": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"project"
				],
				"summary": "get configs which are in a project",
				"operationId": "getConfigs",
				"parameters": [
					{
						"type": "string",
						"description": "config type",
						"name": "configType",
						"in": "query"
					},
					{
						"type": "string",
						"description": "identifier of the project",
						"name": "projectName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/*v1.Config"
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/projects/{projectName}/permissions": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"project"
				],
				"summary": "list all project level perm policies",
				"operationId": "listProjectPermissions",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the project",
						"name": "projectName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/v1.PermissionBase"
							}
						}
					}
				}
			}
		},
		"/api/v1/projects/{projectName}/roles": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"project"
				],
				"summary": "list all project level roles",
				"operationId": "listProjectRoles",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the project",
						"name": "projectName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ListRolesResponse"
						}
					}
				}
			},
			"post": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"project"
				],
				"summary": "create project level role",
				"operationId": "createProjectRole",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the project",
						"name": "projectName",
						"in": "path",
						"required": true
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.CreateRoleRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.RoleBase"
						}
					}
				}
			}
		},
		"/api/v1/projects/{projectName}/roles/{roleName}": {
			"put": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"project"
				],
				"summary": "update project level role",
				"operationId": "updateProjectRole",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the project",
						"name": "projectName",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the project role",
						"name": "roleName",
						"in": "path",
						"required": true
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.UpdateRoleRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.RoleBase"
						}
					}
				}
			},
			"delete": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"project"
				],
				"summary": "delete project level role",
				"operationId": "deleteProjectRole",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the project",
						"name": "projectName",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the project role",
						"name": "roleName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.EmptyResponse"
						}
					}
				}
			}
		},
		"/api/v1/projects/{projectName}/targets": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"project"
				],
				"summary": "get targets list belong to a project",
				"operationId": "listProjectTargets",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the project",
						"name": "projectName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.EmptyResponse"
						}
					}
				}
			}
		},
		"/api/v1/projects/{projectName}/users": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"project"
				],
				"summary": "list all users belong to a project",
				"operationId": "listProjectUser",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the project",
						"name": "projectName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ListProjectUsersResponse"
						}
					}
				}
			},
			"post": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"project"
				],
				"summary": "add a user to a project",
				"operationId": "createProjectUser",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the project",
						"name": "projectName",
						"in": "path",
						"required": true
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.AddProjectUserRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ProjectUserBase"
						}
					}
				}
			}
		},
		"/api/v1/projects/{projectName}/users/{userName}": {
			"put": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"project"
				],
				"summary": "add a user to a project",
				"operationId": "updateProjectUser",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.UpdateProjectUserRequest"
						}
					},
					{
						"type": "string",
						"description": "identifier of the project",
						"name": "projectName",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the project user",
						"name": "userName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ProjectUserBase"
						}
					}
				}
			},
			"delete": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"project"
				],
				"summary": "delete a user from a project",
				"operationId": "deleteProjectUser",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.UpdateProjectUserRequest"
						}
					},
					{
						"type": "string",
						"description": "identifier of the project",
						"name": "projectName",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the project user",
						"name": "userName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.EmptyResponse"
						}
					}
				}
			}
		},
		"/api/v1/query": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"velaQL"
				],
				"summary": "use velaQL to query resource status",
				"operationId": "queryView",
				"parameters": [
					{
						"type": "string",
						"description": "velaql query statement",
						"name": "velaql",
						"in": "query"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.VelaQLViewResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/repository/chart_repos": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"repository",
					"helm"
				],
				"summary": "list chart repo",
				"operationId": "listRepo",
				"parameters": [
					{
						"type": "string",
						"description": "the config project",
						"name": "project",
						"in": "query"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/repository/charts": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"repository",
					"helm"
				],
				"summary": "list charts",
				"operationId": "listCharts",
				"parameters": [
					{
						"type": "string",
						"description": "helm repository url",
						"name": "repoUrl",
						"in": "query"
					},
					{
						"type": "string",
						"description": "secret of the repo",
						"name": "secretName",
						"in": "query"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/repository/charts/{chart}/versions": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"repository",
					"helm"
				],
				"summary": "list versions",
				"operationId": "listVersions",
				"parameters": [
					{
						"type": "string",
						"description": "helm repository url",
						"name": "repoUrl",
						"in": "query"
					},
					{
						"type": "string",
						"description": "secret of the repo",
						"name": "secretName",
						"in": "query"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ChartVersionListResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/repository/charts/{chart}/versions/{version}/values": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"repository",
					"helm"
				],
				"summary": "get chart value",
				"operationId": "chartValues",
				"parameters": [
					{
						"type": "string",
						"description": "helm repository url",
						"name": "repoUrl",
						"in": "query"
					},
					{
						"type": "string",
						"description": "secret of the repo",
						"name": "secretName",
						"in": "query"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/map[string]interface%20%7B%7D"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/roles": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"rbac"
				],
				"summary": "list all platform level roles",
				"operationId": "listPlatformRoles",
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ListRolesResponse"
						}
					}
				}
			},
			"post": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"rbac"
				],
				"summary": "create platform level role",
				"operationId": "createPlatformRole",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.CreateRoleRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.RoleBase"
						}
					}
				}
			}
		},
		"/api/v1/roles/{roleName}": {
			"put": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"rbac"
				],
				"summary": "update platform level role",
				"operationId": "updatePlatformRole",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.UpdateRoleRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.RoleBase"
						}
					}
				}
			},
			"delete": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"rbac"
				],
				"summary": "update platform level role",
				"operationId": "deletePlatformRole",
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.EmptyResponse"
						}
					}
				}
			}
		},
		"/api/v1/system_info": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"systemInfo"
				],
				"operationId": "getSystemInfo",
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.SystemInfoResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			},
			"put": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"systemInfo"
				],
				"operationId": "updateSystemInfo",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.SystemInfoRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.SystemInfoResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/targets": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"Target"
				],
				"summary": "list Target",
				"operationId": "listTargets",
				"parameters": [
					{
						"type": "integer",
						"description": "Page for paging",
						"name": "page",
						"in": "query"
					},
					{
						"type": "integer",
						"description": "PageSize for paging",
						"name": "pageSize",
						"in": "query"
					},
					{
						"type": "string",
						"description": "list targets by project name",
						"name": "project",
						"in": "query"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.SimpleResponse"
						}
					},
					"500": {
						"description": "Bummer, something went wrong"
					}
				}
			},
			"post": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"Target"
				],
				"summary": "create Target",
				"operationId": "createTarget",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.CreateTargetRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.SimpleResponse"
						}
					},
					"400": {
						"description": "create failure",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					},
					"500": {
						"description": "Bummer, something went wrong"
					}
				}
			}
		},
		"/api/v1/targets/{targetName}": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"Target"
				],
				"summary": "detail Target",
				"operationId": "detailTarget",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the Target.",
						"name": "targetName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.SimpleResponse"
						}
					},
					"500": {
						"description": "Bummer, something went wrong"
					}
				}
			},
			"put": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"Target"
				],
				"summary": "update application Target config",
				"operationId": "updateTarget",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the Target",
						"name": "targetName",
						"in": "path",
						"required": true
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.UpdateTargetRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.SimpleResponse"
						}
					},
					"500": {
						"description": "Bummer, something went wrong"
					}
				}
			},
			"delete": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"Target"
				],
				"summary": "deletet Target",
				"operationId": "deleteTarget",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the Target",
						"name": "targetName",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.SimpleResponse"
						}
					},
					"500": {
						"description": "Bummer, something went wrong"
					}
				}
			}
		},
		"/api/v1/users": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"users"
				],
				"summary": "list users",
				"operationId": "listUser",
				"parameters": [
					{
						"type": "integer",
						"description": "query the page number",
						"name": "page",
						"in": "query"
					},
					{
						"type": "integer",
						"description": "query the page size number",
						"name": "pageSize",
						"in": "query"
					},
					{
						"type": "string",
						"description": "fuzzy search based on name",
						"name": "name",
						"in": "query"
					},
					{
						"type": "string",
						"description": "fuzzy search based on email",
						"name": "email",
						"in": "query"
					},
					{
						"type": "string",
						"description": "fuzzy search based on alias",
						"name": "alias",
						"in": "query"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ListUserResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			},
			"post": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"users"
				],
				"summary": "create a user",
				"operationId": "createUser",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.CreateUserRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.UserBase"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/users/{username}": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"users"
				],
				"summary": "get user detail",
				"operationId": "detailUser",
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.DetailUserResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			},
			"put": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"users"
				],
				"summary": "update a user's alias or password",
				"operationId": "updateUser",
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.UserBase"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			},
			"delete": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"users"
				],
				"summary": "delete a user",
				"operationId": "deleteUser",
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.EmptyResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/users/{username}/disable": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"users"
				],
				"summary": "disable a user",
				"operationId": "disableUser",
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.EmptyResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/users/{username}/enable": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"users"
				],
				"summary": "enable a user",
				"operationId": "enableUser",
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.EmptyResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/api/v1/webhook/{token}": {
			"post": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"webhook"
				],
				"summary": "handle application webhook request",
				"operationId": "handleApplicationWebhook",
				"parameters": [
					{
						"type": "string",
						"description": "webhook token",
						"name": "token",
						"in": "path",
						"required": true
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.HandleApplicationTriggerWebhookRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ApplicationDeployResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/bcode.Bcode"
						}
					}
				}
			}
		},
		"/v1/namespaces/{namespace}/applications/{appname}": {
			"get": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"oam_application"
				],
				"summary": "get the specified oam application in the specified namespace",
				"operationId": "getApplication",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the namespace",
						"name": "namespace",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the oam application",
						"name": "appname",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/v1.ApplicationResponse"
						}
					}
				}
			},
			"post": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"oam_application"
				],
				"summary": "create or update oam application in the specified namespace",
				"operationId": "createOrUpdateApplication",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the namespace",
						"name": "namespace",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the oam application",
						"name": "appname",
						"in": "path",
						"required": true
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/v1.ApplicationRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			},
			"delete": {
				"consumes": [
					"application/xml",
					"application/json"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"tags": [
					"oam_application"
				],
				"summary": "create or update oam application in the specified namespace",
				"operationId": "deleteOAMApplication",
				"parameters": [
					{
						"type": "string",
						"description": "identifier of the namespace",
						"name": "namespace",
						"in": "path",
						"required": true
					},
					{
						"type": "string",
						"description": "identifier of the oam application",
						"name": "appname",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		}
	},
	"definitions": {
		"*v1.ApplicationTriggerBase": {},
		"*v1.Config": {},
		"*v1.EmptyResponse": {},
		"addon.Dependency": {
			"properties": {
				"name": {
					"type": "string"
				}
			}
		},
		"addon.DeployTo": {
			"required": [
				"runtime_cluster",
				"disableControlPlane",
				"runtimeCluster"
			],
			"properties": {
				"disableControlPlane": {
					"type": "boolean"
				},
				"runtimeCluster": {
					"type": "boolean"
				},
				"runtime_cluster": {
					"type": "boolean"
				}
			}
		},
		"addon.GitAddonSource": {
			"properties": {
				"path": {
					"type": "string"
				},
				"token": {
					"type": "string"
				},
				"url": {
					"type": "string"
				}
			}
		},
		"addon.GiteeAddonSource": {
			"properties": {
				"path": {
					"type": "string"
				},
				"token": {
					"type": "string"
				},
				"url": {
					"type": "string"
				}
			}
		},
		"addon.GitlabAddonSource": {
			"properties": {
				"path": {
					"type": "string"
				},
				"repo": {
					"type": "string"
				},
				"token": {
					"type": "string"
				},
				"url": {
					"type": "string"
				}
			}
		},
		"addon.HelmSource": {
			"properties": {
				"url": {
					"type": "string"
				}
			}
		},
		"addon.Meta": {
			"required": [
				"name",
				"version",
				"description",
				"icon",
				"invisible"
			],
			"properties": {
				"dependencies": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/addon.Dependency"
					}
				},
				"deployTo": {
					"$ref": "#/definitions/addon.DeployTo"
				},
				"description": {
					"type": "string"
				},
				"icon": {
					"type": "string"
				},
				"invisible": {
					"type": "boolean"
				},
				"name": {
					"type": "string"
				},
				"needNamespace": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"system": {
					"$ref": "#/definitions/addon.SystemRequirements"
				},
				"tags": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"url": {
					"type": "string"
				},
				"version": {
					"type": "string"
				}
			}
		},
		"addon.OSSAddonSource": {
			"required": [
				"end_point",
				"bucket",
				"path"
			],
			"properties": {
				"bucket": {
					"type": "string"
				},
				"end_point": {
					"type": "string"
				},
				"path": {
					"type": "string"
				}
			}
		},
		"addon.SystemRequirements": {
			"properties": {
				"kubernetes": {
					"type": "string"
				},
				"vela": {
					"type": "string"
				}
			}
		},
		"bcode.Bcode": {
			"required": [
				"BusinessCode",
				"Message"
			],
			"properties": {
				"BusinessCode": {
					"type": "integer",
					"format": "int32"
				},
				"Message": {
					"type": "string"
				}
			}
		},
		"chart.Dependency": {
			"required": [
				"name",
				"repository"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"condition": {
					"type": "string"
				},
				"enabled": {
					"type": "boolean"
				},
				"import-values": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/chart.Dependency.import-values"
					}
				},
				"name": {
					"type": "string"
				},
				"repository": {
					"type": "string"
				},
				"tags": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"version": {
					"type": "string"
				}
			}
		},
		"chart.Dependency.import-values": {},
		"chart.Maintainer": {
			"properties": {
				"email": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"url": {
					"type": "string"
				}
			}
		},
		"chart.Metadata": {
			"properties": {
				"annotations": {
					"type": "object",
					"additionalProperties": {
						"type": "string"
					}
				},
				"apiVersion": {
					"type": "string"
				},
				"appVersion": {
					"type": "string"
				},
				"condition": {
					"type": "string"
				},
				"dependencies": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/chart.Dependency"
					}
				},
				"deprecated": {
					"type": "boolean"
				},
				"description": {
					"type": "string"
				},
				"home": {
					"type": "string"
				},
				"icon": {
					"type": "string"
				},
				"keywords": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"kubeVersion": {
					"type": "string"
				},
				"maintainers": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/chart.Maintainer"
					}
				},
				"name": {
					"type": "string"
				},
				"sources": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"tags": {
					"type": "string"
				},
				"type": {
					"type": "string"
				},
				"version": {
					"type": "string"
				}
			}
		},
		"cloudprovider.CloudCluster": {
			"required": [
				"provider",
				"id",
				"name",
				"type",
				"zone",
				"zoneID",
				"regionID",
				"vpcID",
				"labels",
				"status",
				"apiServerURL",
				"dashboardURL"
			],
			"properties": {
				"apiServerURL": {
					"type": "string"
				},
				"dashboardURL": {
					"type": "string"
				},
				"id": {
					"type": "string"
				},
				"labels": {
					"type": "object",
					"additionalProperties": {
						"type": "string"
					}
				},
				"name": {
					"type": "string"
				},
				"provider": {
					"type": "string"
				},
				"regionID": {
					"type": "string"
				},
				"status": {
					"type": "string"
				},
				"type": {
					"type": "string"
				},
				"vpcID": {
					"type": "string"
				},
				"zone": {
					"type": "string"
				},
				"zoneID": {
					"type": "string"
				}
			}
		},
		"common.AppStatus": {
			"properties": {
				"appliedResources": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/common.ClusterObjectReference"
					}
				},
				"components": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.ObjectReference"
					}
				},
				"conditions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/condition.Condition"
					}
				},
				"latestRevision": {
					"$ref": "#/definitions/common.Revision"
				},
				"observedGeneration": {
					"type": "integer",
					"format": "int64"
				},
				"policy": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/common.PolicyStatus"
					}
				},
				"services": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/common.ApplicationComponentStatus"
					}
				},
				"status": {
					"type": "string"
				},
				"workflow": {
					"$ref": "#/definitions/common.WorkflowStatus"
				}
			}
		},
		"common.ApplicationComponent": {
			"required": [
				"name",
				"type"
			],
			"properties": {
				"dependsOn": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"externalRevision": {
					"type": "string"
				},
				"inputs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/common.inputItem"
					}
				},
				"name": {
					"type": "string"
				},
				"outputs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/common.outputItem"
					}
				},
				"properties": {
					"type": "string"
				},
				"scopes": {
					"type": "object",
					"additionalProperties": {
						"type": "string"
					}
				},
				"traits": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/common.ApplicationTrait"
					}
				},
				"type": {
					"type": "string"
				}
			}
		},
		"common.ApplicationComponentStatus": {
			"required": [
				"name",
				"healthy"
			],
			"properties": {
				"cluster": {
					"type": "string"
				},
				"env": {
					"type": "string"
				},
				"healthy": {
					"type": "boolean"
				},
				"message": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"namespace": {
					"type": "string"
				},
				"scopes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.ObjectReference"
					}
				},
				"traits": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/common.ApplicationTraitStatus"
					}
				},
				"workloadDefinition": {
					"$ref": "#/definitions/common.WorkloadGVK"
				}
			}
		},
		"common.ApplicationTrait": {
			"required": [
				"type"
			],
			"properties": {
				"properties": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"common.ApplicationTraitStatus": {
			"required": [
				"type",
				"healthy"
			],
			"properties": {
				"healthy": {
					"type": "boolean"
				},
				"message": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"common.CUE": {
			"required": [
				"template"
			],
			"properties": {
				"template": {
					"type": "string"
				}
			}
		},
		"common.ChildResourceKind": {
			"required": [
				"apiVersion",
				"kind"
			],
			"properties": {
				"apiVersion": {
					"type": "string"
				},
				"kind": {
					"type": "string"
				},
				"selector": {
					"type": "object",
					"additionalProperties": {
						"type": "string"
					}
				}
			}
		},
		"common.ClusterObjectReference": {
			"description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
			"properties": {
				"apiVersion": {
					"description": "API version of the referent.",
					"type": "string"
				},
				"cluster": {
					"type": "string"
				},
				"creator": {
					"type": "string"
				},
				"fieldPath": {
					"description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.",
					"type": "string"
				},
				"kind": {
					"description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
					"type": "string"
				},
				"name": {
					"description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
					"type": "string"
				},
				"namespace": {
					"description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
					"type": "string"
				},
				"resourceVersion": {
					"description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
					"type": "string"
				},
				"uid": {
					"description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
					"type": "string"
				}
			}
		},
		"common.DefinitionReference": {
			"required": [
				"name"
			],
			"properties": {
				"name": {
					"type": "string"
				},
				"version": {
					"type": "string"
				}
			}
		},
		"common.Helm": {
			"required": [
				"release",
				"repository"
			],
			"properties": {
				"release": {
					"type": "string"
				},
				"repository": {
					"type": "string"
				}
			}
		},
		"common.Kube": {
			"required": [
				"template"
			],
			"properties": {
				"parameters": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/common.KubeParameter"
					}
				},
				"template": {
					"type": "string"
				}
			}
		},
		"common.KubeParameter": {
			"required": [
				"name",
				"type",
				"fieldPaths"
			],
			"properties": {
				"description": {
					"type": "string"
				},
				"fieldPaths": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"name": {
					"type": "string"
				},
				"required": {
					"type": "boolean"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"common.PolicyStatus": {
			"required": [
				"name",
				"type"
			],
			"properties": {
				"name": {
					"type": "string"
				},
				"status": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"common.Revision": {
			"required": [
				"name",
				"revision"
			],
			"properties": {
				"name": {
					"type": "string"
				},
				"revision": {
					"type": "integer",
					"format": "int64"
				},
				"revisionHash": {
					"type": "string"
				}
			}
		},
		"common.Schematic": {
			"properties": {
				"cue": {
					"$ref": "#/definitions/common.CUE"
				},
				"helm": {
					"$ref": "#/definitions/common.Helm"
				},
				"kube": {
					"$ref": "#/definitions/common.Kube"
				},
				"terraform": {
					"$ref": "#/definitions/common.Terraform"
				}
			}
		},
		"common.Status": {
			"properties": {
				"customStatus": {
					"type": "string"
				},
				"healthPolicy": {
					"type": "string"
				}
			}
		},
		"common.SubStepsStatus": {
			"properties": {
				"mode": {
					"type": "string"
				},
				"stepIndex": {
					"type": "integer",
					"format": "int32"
				},
				"steps": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/common.WorkflowSubStepStatus"
					}
				}
			}
		},
		"common.Terraform": {
			"required": [
				"configuration"
			],
			"properties": {
				"configuration": {
					"type": "string"
				},
				"customRegion": {
					"type": "string"
				},
				"deleteResource": {
					"type": "boolean"
				},
				"path": {
					"type": "string"
				},
				"providerRef": {
					"$ref": "#/definitions/types.Reference"
				},
				"type": {
					"type": "string"
				},
				"writeConnectionSecretToRef": {
					"$ref": "#/definitions/types.SecretReference"
				}
			}
		},
		"common.WorkflowStatus": {
			"required": [
				"mode",
				"suspend",
				"terminated",
				"finished"
			],
			"properties": {
				"appRevision": {
					"type": "string"
				},
				"contextBackend": {
					"$ref": "#/definitions/v1.ObjectReference"
				},
				"finished": {
					"type": "boolean"
				},
				"message": {
					"type": "string"
				},
				"mode": {
					"type": "string"
				},
				"startTime": {
					"type": "string"
				},
				"steps": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/common.WorkflowStepStatus"
					}
				},
				"suspend": {
					"type": "boolean"
				},
				"terminated": {
					"type": "boolean"
				}
			}
		},
		"common.WorkflowStepStatus": {
			"required": [
				"id"
			],
			"properties": {
				"firstExecuteTime": {
					"type": "string"
				},
				"id": {
					"type": "string"
				},
				"lastExecuteTime": {
					"type": "string"
				},
				"message": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"phase": {
					"type": "string"
				},
				"reason": {
					"type": "string"
				},
				"subSteps": {
					"$ref": "#/definitions/common.SubStepsStatus"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"common.WorkflowSubStepStatus": {
			"required": [
				"id"
			],
			"properties": {
				"id": {
					"type": "string"
				},
				"message": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"phase": {
					"type": "string"
				},
				"reason": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"common.WorkloadGVK": {
			"required": [
				"apiVersion",
				"kind"
			],
			"properties": {
				"apiVersion": {
					"type": "string"
				},
				"kind": {
					"type": "string"
				}
			}
		},
		"common.WorkloadTypeDescriptor": {
			"properties": {
				"definition": {
					"$ref": "#/definitions/common.WorkloadGVK"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"common.inputItem": {
			"required": [
				"parameterKey",
				"from"
			],
			"properties": {
				"from": {
					"type": "string"
				},
				"parameterKey": {
					"type": "string"
				}
			}
		},
		"common.outputItem": {
			"required": [
				"valueFrom",
				"name"
			],
			"properties": {
				"name": {
					"type": "string"
				},
				"valueFrom": {
					"type": "string"
				}
			}
		},
		"condition.Condition": {
			"required": [
				"type",
				"status",
				"lastTransitionTime",
				"reason"
			],
			"properties": {
				"lastTransitionTime": {
					"type": "string"
				},
				"message": {
					"type": "string"
				},
				"reason": {
					"type": "string"
				},
				"status": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"condition.ConditionedStatus": {
			"properties": {
				"conditions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/condition.Condition"
					}
				}
			}
		},
		"map[string]interface {}": {
			"type": "object"
		},
		"model.ApplicationComponent": {
			"required": [
				"createTime",
				"updateTime",
				"appPrimaryKey",
				"creator",
				"name",
				"alias",
				"type",
				"main"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"appPrimaryKey": {
					"type": "string"
				},
				"createTime": {
					"type": "string",
					"format": "date-time"
				},
				"creator": {
					"type": "string"
				},
				"dependsOn": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"description": {
					"type": "string"
				},
				"externalRevision": {
					"type": "string"
				},
				"icon": {
					"type": "string"
				},
				"inputs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/common.inputItem"
					}
				},
				"labels": {
					"type": "object",
					"additionalProperties": {
						"type": "string"
					}
				},
				"main": {
					"type": "boolean"
				},
				"name": {
					"type": "string"
				},
				"outputs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/common.outputItem"
					}
				},
				"properties": {
					"$ref": "#/definitions/model.JSONStruct"
				},
				"scopes": {
					"type": "object",
					"additionalProperties": {
						"type": "string"
					}
				},
				"traits": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/model.ApplicationTrait"
					}
				},
				"type": {
					"type": "string"
				},
				"updateTime": {
					"type": "string",
					"format": "date-time"
				}
			}
		},
		"model.ApplicationRevision": {
			"required": [
				"createTime",
				"updateTime",
				"appPrimaryKey",
				"version",
				"status",
				"reason",
				"deployUser",
				"note",
				"triggerType",
				"workflowName",
				"envName"
			],
			"properties": {
				"appPrimaryKey": {
					"type": "string"
				},
				"applyAppConfig": {
					"type": "string"
				},
				"codeInfo": {
					"$ref": "#/definitions/model.CodeInfo"
				},
				"createTime": {
					"type": "string",
					"format": "date-time"
				},
				"deployUser": {
					"type": "string"
				},
				"envName": {
					"type": "string"
				},
				"imageInfo": {
					"$ref": "#/definitions/model.ImageInfo"
				},
				"note": {
					"type": "string"
				},
				"reason": {
					"type": "string"
				},
				"rollbackVersion": {
					"type": "string"
				},
				"status": {
					"type": "string"
				},
				"triggerType": {
					"type": "string"
				},
				"updateTime": {
					"type": "string",
					"format": "date-time"
				},
				"version": {
					"type": "string"
				},
				"workflowName": {
					"type": "string"
				}
			}
		},
		"model.ApplicationTrait": {
			"required": [
				"alias",
				"description",
				"type",
				"createTime",
				"updateTime"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"createTime": {
					"type": "string",
					"format": "date-time"
				},
				"description": {
					"type": "string"
				},
				"properties": {
					"$ref": "#/definitions/model.JSONStruct"
				},
				"type": {
					"type": "string"
				},
				"updateTime": {
					"type": "string",
					"format": "date-time"
				}
			}
		},
		"model.BaseModel": {
			"required": [
				"createTime",
				"updateTime"
			],
			"properties": {
				"createTime": {
					"type": "string",
					"format": "date-time"
				},
				"updateTime": {
					"type": "string",
					"format": "date-time"
				}
			}
		},
		"model.Cluster": {
			"required": [
				"createTime",
				"updateTime",
				"name",
				"alias",
				"description",
				"icon",
				"labels",
				"status",
				"reason",
				"provider",
				"apiServerURL",
				"dashboardURL",
				"kubeConfig",
				"kubeConfigSecret"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"apiServerURL": {
					"type": "string"
				},
				"createTime": {
					"type": "string",
					"format": "date-time"
				},
				"dashboardURL": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"icon": {
					"type": "string"
				},
				"kubeConfig": {
					"type": "string"
				},
				"kubeConfigSecret": {
					"type": "string"
				},
				"labels": {
					"type": "object",
					"additionalProperties": {
						"type": "string"
					}
				},
				"name": {
					"type": "string"
				},
				"provider": {
					"$ref": "#/definitions/model.ProviderInfo"
				},
				"reason": {
					"type": "string"
				},
				"status": {
					"type": "string"
				},
				"updateTime": {
					"type": "string",
					"format": "date-time"
				}
			}
		},
		"model.CodeInfo": {
			"properties": {
				"branch": {
					"type": "string"
				},
				"commit": {
					"type": "string"
				},
				"user": {
					"type": "string"
				}
			}
		},
		"model.ImageInfo": {
			"required": [
				"type"
			],
			"properties": {
				"repository": {
					"$ref": "#/definitions/model.ImageRepository"
				},
				"resource": {
					"$ref": "#/definitions/model.ImageResource"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"model.ImageRepository": {
			"required": [
				"name",
				"namespace",
				"fullName",
				"type"
			],
			"properties": {
				"createTime": {
					"type": "string",
					"format": "date-time"
				},
				"fullName": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"namespace": {
					"type": "string"
				},
				"region": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"model.ImageResource": {
			"required": [
				"digest",
				"tag",
				"url"
			],
			"properties": {
				"createTime": {
					"type": "string",
					"format": "date-time"
				},
				"digest": {
					"type": "string"
				},
				"tag": {
					"type": "string"
				},
				"url": {
					"type": "string"
				}
			}
		},
		"model.JSONStruct": {
			"type": "object"
		},
		"model.ProviderInfo": {
			"required": [
				"provider",
				"clusterID",
				"labels"
			],
			"properties": {
				"clusterID": {
					"type": "string"
				},
				"clusterName": {
					"type": "string"
				},
				"labels": {
					"type": "object",
					"additionalProperties": {
						"type": "string"
					}
				},
				"provider": {
					"type": "string"
				},
				"regionID": {
					"type": "string"
				},
				"vpcID": {
					"type": "string"
				},
				"zone": {
					"type": "string"
				},
				"zoneID": {
					"type": "string"
				}
			}
		},
		"model.WorkflowStepStatus": {
			"required": [
				"id",
				"name",
				"alias"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"firstExecuteTime": {
					"type": "string",
					"format": "date-time"
				},
				"id": {
					"type": "string"
				},
				"lastExecuteTime": {
					"type": "string",
					"format": "date-time"
				},
				"message": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"phase": {
					"type": "string"
				},
				"reason": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"repo.ChartVersion": {
			"required": [
				"Metadata",
				"urls"
			],
			"properties": {
				"Metadata": {
					"$ref": "#/definitions/chart.Metadata"
				},
				"checksum": {
					"type": "string"
				},
				"created": {
					"type": "string",
					"format": "date-time"
				},
				"digest": {
					"type": "string"
				},
				"engine": {
					"type": "string"
				},
				"removed": {
					"type": "boolean"
				},
				"tillerVersion": {
					"type": "string"
				},
				"url": {
					"type": "string"
				},
				"urls": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"types.Parameter": {
			"required": [
				"name"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"default": {
					"$ref": "#/definitions/types.Parameter.default"
				},
				"ignore": {
					"type": "boolean"
				},
				"jsonType": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"required": {
					"type": "boolean"
				},
				"short": {
					"type": "string"
				},
				"type": {
					"type": "integer",
					"format": "int32"
				},
				"usage": {
					"type": "string"
				}
			}
		},
		"types.Parameter.default": {},
		"types.Reference": {
			"required": [
				"name"
			],
			"properties": {
				"name": {
					"type": "string"
				},
				"namespace": {
					"type": "string"
				}
			}
		},
		"types.SecretReference": {
			"required": [
				"name"
			],
			"properties": {
				"name": {
					"type": "string"
				},
				"namespace": {
					"type": "string"
				}
			}
		},
		"utils.Condition": {
			"required": [
				"jsonKey",
				"value"
			],
			"properties": {
				"action": {
					"type": "string"
				},
				"jsonKey": {
					"type": "string"
				},
				"op": {
					"type": "string"
				},
				"value": {
					"$ref": "#/definitions/utils.Condition.value"
				}
			}
		},
		"utils.Condition.value": {},
		"utils.GroupOption": {
			"required": [
				"label",
				"keys"
			],
			"properties": {
				"keys": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"label": {
					"type": "string"
				}
			}
		},
		"utils.Option": {
			"required": [
				"label",
				"value"
			],
			"properties": {
				"label": {
					"type": "string"
				},
				"value": {
					"$ref": "#/definitions/utils.Option.value"
				}
			}
		},
		"utils.Option.value": {},
		"utils.Style": {
			"required": [
				"colSpan"
			],
			"properties": {
				"colSpan": {
					"type": "integer",
					"format": "int32"
				}
			}
		},
		"utils.UIParameter": {
			"required": [
				"sort",
				"label",
				"description",
				"jsonKey",
				"uiType"
			],
			"properties": {
				"additional": {
					"type": "boolean"
				},
				"additionalParameter": {
					"$ref": "#/definitions/utils.UIParameter"
				},
				"conditions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/utils.Condition"
					}
				},
				"description": {
					"type": "string"
				},
				"disable": {
					"type": "boolean"
				},
				"jsonKey": {
					"type": "string"
				},
				"label": {
					"type": "string"
				},
				"sort": {
					"type": "integer",
					"format": "integer"
				},
				"style": {
					"$ref": "#/definitions/utils.Style"
				},
				"subParameterGroupOption": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/utils.GroupOption"
					}
				},
				"subParameters": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/utils.UIParameter"
					}
				},
				"uiType": {
					"type": "string"
				},
				"validate": {
					"$ref": "#/definitions/utils.Validate"
				}
			}
		},
		"utils.Validate": {
			"required": [
				"immutable"
			],
			"properties": {
				"defaultValue": {
					"$ref": "#/definitions/utils.Validate.defaultValue"
				},
				"immutable": {
					"type": "boolean"
				},
				"max": {
					"type": "number",
					"format": "double"
				},
				"maxLength": {
					"type": "integer",
					"format": "integer"
				},
				"min": {
					"type": "number",
					"format": "double"
				},
				"minLength": {
					"type": "integer",
					"format": "integer"
				},
				"options": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/utils.Option"
					}
				},
				"pattern": {
					"type": "string"
				},
				"required": {
					"type": "boolean"
				}
			}
		},
		"utils.Validate.defaultValue": {},
		"v1.AccessKeyRequest": {
			"required": [
				"accessKeyID",
				"accessKeySecret"
			],
			"properties": {
				"accessKeyID": {
					"type": "string"
				},
				"accessKeySecret": {
					"type": "string"
				}
			}
		},
		"v1.AddProjectUserRequest": {
			"required": [
				"userName",
				"userRoles"
			],
			"properties": {
				"userName": {
					"type": "string"
				},
				"userRoles": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"v1.AddonBaseStatus": {
			"required": [
				"name",
				"phase"
			],
			"properties": {
				"name": {
					"type": "string"
				},
				"phase": {
					"type": "string"
				}
			}
		},
		"v1.AddonDefinition": {
			"properties": {
				"description": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"v1.AddonInfo": {
			"required": [
				"Meta",
				"registryName"
			],
			"properties": {
				"Meta": {
					"$ref": "#/definitions/addon.Meta"
				},
				"registryName": {
					"type": "string"
				}
			}
		},
		"v1.AddonRegistry": {
			"required": [
				"name"
			],
			"properties": {
				"git": {
					"$ref": "#/definitions/addon.GitAddonSource"
				},
				"gitee": {
					"$ref": "#/definitions/addon.GiteeAddonSource"
				},
				"gitlab": {
					"$ref": "#/definitions/addon.GitlabAddonSource"
				},
				"helm": {
					"$ref": "#/definitions/addon.HelmSource"
				},
				"name": {
					"type": "string"
				},
				"oss": {
					"$ref": "#/definitions/addon.OSSAddonSource"
				}
			}
		},
		"v1.AddonStatusResponse": {
			"required": [
				"name",
				"phase",
				"args"
			],
			"properties": {
				"allClusters": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.NameAlias"
					}
				},
				"appStatus": {
					"$ref": "#/definitions/common.AppStatus"
				},
				"args": {
					"type": "object"
				},
				"clusters": {
					"type": "object",
					"additionalProperties": {
						"$ref": "#/definitions/v1.AddonStatusResponse.clusters"
					}
				},
				"enabling_progress": {
					"$ref": "#/definitions/v1.EnablingProgress"
				},
				"installedVersion": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"phase": {
					"type": "string"
				}
			}
		},
		"v1.AddonStatusResponse.clusters": {
			"type": "object"
		},
		"v1.AppCompareResponse": {
			"required": [
				"isDiff",
				"diffReport",
				"newAppYAML",
				"oldAppYAML"
			],
			"properties": {
				"diffReport": {
					"type": "string"
				},
				"isDiff": {
					"type": "boolean"
				},
				"newAppYAML": {
					"type": "string"
				},
				"oldAppYAML": {
					"type": "string"
				}
			}
		},
		"v1.AppDryRunResponse": {
			"required": [
				"yaml"
			],
			"properties": {
				"yaml": {
					"type": "string"
				}
			}
		},
		"v1.AppResetResponse": {
			"required": [
				"isReset"
			],
			"properties": {
				"isReset": {
					"type": "boolean"
				}
			}
		},
		"v1.ApplicationBase": {
			"required": [
				"name",
				"alias",
				"project",
				"description",
				"createTime",
				"updateTime",
				"icon"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"createTime": {
					"type": "string",
					"format": "date-time"
				},
				"description": {
					"type": "string"
				},
				"icon": {
					"type": "string"
				},
				"labels": {
					"type": "object",
					"additionalProperties": {
						"type": "string"
					}
				},
				"name": {
					"type": "string"
				},
				"project": {
					"$ref": "#/definitions/v1.ProjectBase"
				},
				"readOnly": {
					"type": "boolean"
				},
				"updateTime": {
					"type": "string",
					"format": "date-time"
				}
			}
		},
		"v1.ApplicationDeployRequest": {
			"required": [
				"workflowName",
				"note",
				"triggerType",
				"force"
			],
			"properties": {
				"codeInfo": {
					"$ref": "#/definitions/model.CodeInfo"
				},
				"force": {
					"type": "boolean"
				},
				"imageInfo": {
					"$ref": "#/definitions/model.ImageInfo"
				},
				"note": {
					"type": "string"
				},
				"triggerType": {
					"type": "string"
				},
				"workflowName": {
					"type": "string"
				}
			}
		},
		"v1.ApplicationDeployResponse": {
			"required": [
				"note",
				"envName",
				"triggerType",
				"createTime",
				"version",
				"status"
			],
			"properties": {
				"codeInfo": {
					"$ref": "#/definitions/model.CodeInfo"
				},
				"createTime": {
					"type": "string",
					"format": "date-time"
				},
				"deployUser": {
					"type": "string"
				},
				"envName": {
					"type": "string"
				},
				"imageInfo": {
					"$ref": "#/definitions/model.ImageInfo"
				},
				"note": {
					"type": "string"
				},
				"reason": {
					"type": "string"
				},
				"status": {
					"type": "string"
				},
				"triggerType": {
					"type": "string"
				},
				"version": {
					"type": "string"
				}
			}
		},
		"v1.ApplicationRequest": {
			"required": [
				"components"
			],
			"properties": {
				"components": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/common.ApplicationComponent"
					}
				},
				"policies": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1beta1.AppPolicy"
					}
				},
				"workflow": {
					"$ref": "#/definitions/v1beta1.Workflow"
				}
			}
		},
		"v1.ApplicationResourceInfo": {
			"required": [
				"componentNum"
			],
			"properties": {
				"componentNum": {
					"type": "integer",
					"format": "int64"
				}
			}
		},
		"v1.ApplicationResponse": {
			"required": [
				"apiVersion",
				"kind",
				"spec",
				"status"
			],
			"properties": {
				"apiVersion": {
					"type": "string"
				},
				"kind": {
					"type": "string"
				},
				"spec": {
					"$ref": "#/definitions/v1beta1.ApplicationSpec"
				},
				"status": {
					"$ref": "#/definitions/common.AppStatus"
				}
			}
		},
		"v1.ApplicationRevisionBase": {
			"required": [
				"createTime",
				"version",
				"status",
				"note",
				"envName",
				"triggerType"
			],
			"properties": {
				"codeInfo": {
					"$ref": "#/definitions/model.CodeInfo"
				},
				"createTime": {
					"type": "string",
					"format": "date-time"
				},
				"deployUser": {
					"type": "string"
				},
				"envName": {
					"type": "string"
				},
				"imageInfo": {
					"$ref": "#/definitions/model.ImageInfo"
				},
				"note": {
					"type": "string"
				},
				"reason": {
					"type": "string"
				},
				"status": {
					"type": "string"
				},
				"triggerType": {
					"type": "string"
				},
				"version": {
					"type": "string"
				}
			}
		},
		"v1.ApplicationStatisticsResponse": {
			"required": [
				"envCount",
				"targetCount",
				"revisionCount",
				"workflowCount"
			],
			"properties": {
				"envCount": {
					"type": "integer",
					"format": "int64"
				},
				"revisionCount": {
					"type": "integer",
					"format": "int64"
				},
				"targetCount": {
					"type": "integer",
					"format": "int64"
				},
				"workflowCount": {
					"type": "integer",
					"format": "int64"
				}
			}
		},
		"v1.ApplicationStatusResponse": {
			"required": [
				"envName",
				"status"
			],
			"properties": {
				"envName": {
					"type": "string"
				},
				"status": {
					"$ref": "#/definitions/common.AppStatus"
				}
			}
		},
		"v1.ApplicationTemplateBase": {
			"required": [
				"templateName",
				"createTime",
				"updateTime"
			],
			"properties": {
				"createTime": {
					"type": "string",
					"format": "date-time"
				},
				"templateName": {
					"type": "string"
				},
				"updateTime": {
					"type": "string",
					"format": "date-time"
				},
				"versions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.ApplicationTemplateVersion"
					}
				}
			}
		},
		"v1.ApplicationTemplateVersion": {
			"required": [
				"version",
				"description",
				"createUser",
				"createTime",
				"updateTime"
			],
			"properties": {
				"createTime": {
					"type": "string",
					"format": "date-time"
				},
				"createUser": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"updateTime": {
					"type": "string",
					"format": "date-time"
				},
				"version": {
					"type": "string"
				}
			}
		},
		"v1.ApplicationTrait": {
			"required": [
				"type",
				"properties",
				"createTime",
				"updateTime"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"createTime": {
					"type": "string",
					"format": "date-time"
				},
				"description": {
					"type": "string"
				},
				"properties": {
					"$ref": "#/definitions/model.JSONStruct"
				},
				"type": {
					"type": "string"
				},
				"updateTime": {
					"type": "string",
					"format": "date-time"
				}
			}
		},
		"v1.ApplicationTriggerBase": {
			"required": [
				"name",
				"workflowName",
				"type",
				"payloadType",
				"token",
				"createTime",
				"updateTime"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"componentName": {
					"type": "string"
				},
				"createTime": {
					"type": "string",
					"format": "date-time"
				},
				"description": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"payloadType": {
					"type": "string"
				},
				"token": {
					"type": "string"
				},
				"type": {
					"type": "string"
				},
				"updateTime": {
					"type": "string",
					"format": "date-time"
				},
				"workflowName": {
					"type": "string"
				}
			}
		},
		"v1.ChartVersionListResponse": {
			"required": [
				"versions"
			],
			"properties": {
				"versions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/repo.ChartVersion"
					}
				}
			}
		},
		"v1.ClusterBase": {
			"required": [
				"name",
				"providerInfo",
				"apiServerURL",
				"dashboardURL",
				"status",
				"reason"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"apiServerURL": {
					"type": "string"
				},
				"dashboardURL": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"icon": {
					"type": "string"
				},
				"labels": {
					"type": "object",
					"additionalProperties": {
						"type": "string"
					}
				},
				"name": {
					"type": "string"
				},
				"providerInfo": {
					"$ref": "#/definitions/model.ProviderInfo"
				},
				"reason": {
					"type": "string"
				},
				"status": {
					"type": "string"
				}
			}
		},
		"v1.ClusterResourceInfo": {
			"required": [
				"workerNumber",
				"masterNumber",
				"memoryCapacity",
				"cpuCapacity",
				"podCapacity",
				"memoryUsed",
				"cpuUsed",
				"podUsed"
			],
			"properties": {
				"cpuCapacity": {
					"type": "integer",
					"format": "int64"
				},
				"cpuUsed": {
					"type": "integer",
					"format": "int64"
				},
				"gpuCapacity": {
					"type": "integer",
					"format": "int64"
				},
				"gpuUsed": {
					"type": "integer",
					"format": "int64"
				},
				"masterNumber": {
					"type": "integer",
					"format": "int32"
				},
				"memoryCapacity": {
					"type": "integer",
					"format": "int64"
				},
				"memoryUsed": {
					"type": "integer",
					"format": "int64"
				},
				"podCapacity": {
					"type": "integer",
					"format": "int64"
				},
				"podUsed": {
					"type": "integer",
					"format": "int64"
				},
				"storageClassList": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"workerNumber": {
					"type": "integer",
					"format": "int32"
				}
			}
		},
		"v1.ClusterTarget": {
			"required": [
				"clusterName"
			],
			"properties": {
				"clusterName": {
					"type": "string"
				},
				"namespace": {
					"type": "string"
				}
			}
		},
		"v1.ComponentBase": {
			"required": [
				"name",
				"alias",
				"description",
				"componentType",
				"main",
				"dependsOn",
				"createTime",
				"updateTime",
				"traits"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"componentType": {
					"type": "string"
				},
				"createTime": {
					"type": "string",
					"format": "date-time"
				},
				"creator": {
					"type": "string"
				},
				"dependsOn": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"description": {
					"type": "string"
				},
				"icon": {
					"type": "string"
				},
				"inputs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/common.inputItem"
					}
				},
				"labels": {
					"type": "object",
					"additionalProperties": {
						"type": "string"
					}
				},
				"main": {
					"type": "boolean"
				},
				"name": {
					"type": "string"
				},
				"outputs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/common.outputItem"
					}
				},
				"traits": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.ApplicationTrait"
					}
				},
				"updateTime": {
					"type": "string",
					"format": "date-time"
				}
			}
		},
		"v1.ComponentListResponse": {
			"required": [
				"components"
			],
			"properties": {
				"components": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.ComponentBase"
					}
				}
			}
		},
		"v1.ComponentSelector": {
			"required": [
				"components"
			],
			"properties": {
				"components": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"v1.ConfigType": {
			"required": [
				"definitions",
				"alias",
				"name",
				"description"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"definitions": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"description": {
					"type": "string"
				},
				"name": {
					"type": "string"
				}
			}
		},
		"v1.ConnectCloudClusterRequest": {
			"required": [
				"accessKeyID",
				"accessKeySecret",
				"clusterID",
				"name",
				"icon"
			],
			"properties": {
				"accessKeyID": {
					"type": "string"
				},
				"accessKeySecret": {
					"type": "string"
				},
				"alias": {
					"type": "string"
				},
				"clusterID": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"icon": {
					"type": "string"
				},
				"labels": {
					"type": "object",
					"additionalProperties": {
						"type": "string"
					}
				},
				"name": {
					"type": "string"
				}
			}
		},
		"v1.CreateAddonRegistryRequest": {
			"required": [
				"name"
			],
			"properties": {
				"git": {
					"$ref": "#/definitions/addon.GitAddonSource"
				},
				"gitee": {
					"$ref": "#/definitions/addon.GiteeAddonSource"
				},
				"gitlab": {
					"$ref": "#/definitions/addon.GitlabAddonSource"
				},
				"helm": {
					"$ref": "#/definitions/addon.HelmSource"
				},
				"name": {
					"type": "string"
				},
				"oss": {
					"$ref": "#/definitions/addon.OSSAddonSource"
				}
			}
		},
		"v1.CreateApplicationEnvbindingRequest": {
			"required": [
				"name"
			],
			"properties": {
				"name": {
					"type": "string"
				}
			}
		},
		"v1.CreateApplicationRequest": {
			"required": [
				"name",
				"project",
				"icon",
				"component"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"component": {
					"$ref": "#/definitions/v1.CreateComponentRequest"
				},
				"description": {
					"type": "string"
				},
				"envBinding": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.EnvBinding"
					}
				},
				"icon": {
					"type": "string"
				},
				"labels": {
					"type": "object",
					"additionalProperties": {
						"type": "string"
					}
				},
				"name": {
					"type": "string"
				},
				"project": {
					"type": "string"
				}
			}
		},
		"v1.CreateApplicationTemplateRequest": {
			"required": [
				"templateName",
				"version",
				"description"
			],
			"properties": {
				"description": {
					"type": "string"
				},
				"templateName": {
					"type": "string"
				},
				"version": {
					"type": "string"
				}
			}
		},
		"v1.CreateApplicationTraitRequest": {
			"required": [
				"type",
				"properties"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"properties": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"v1.CreateApplicationTriggerRequest": {
			"required": [
				"name",
				"workflowName",
				"type",
				"payloadType"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"componentName": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"payloadType": {
					"type": "string"
				},
				"type": {
					"type": "string"
				},
				"workflowName": {
					"type": "string"
				}
			}
		},
		"v1.CreateCloudClusterRequest": {
			"required": [
				"accessKeyID",
				"accessKeySecret",
				"name",
				"zone",
				"workerNumber",
				"cpuCoresPerWorker",
				"memoryPerWorker"
			],
			"properties": {
				"accessKeyID": {
					"type": "string"
				},
				"accessKeySecret": {
					"type": "string"
				},
				"cpuCoresPerWorker": {
					"type": "integer",
					"format": "int64"
				},
				"memoryPerWorker": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				},
				"workerNumber": {
					"type": "integer",
					"format": "int32"
				},
				"zone": {
					"type": "string"
				}
			}
		},
		"v1.CreateCloudClusterResponse": {
			"required": [
				"clusterName",
				"clusterID",
				"status"
			],
			"properties": {
				"clusterID": {
					"type": "string"
				},
				"clusterName": {
					"type": "string"
				},
				"status": {
					"type": "string"
				}
			}
		},
		"v1.CreateClusterNamespaceRequest": {
			"required": [
				"namespace"
			],
			"properties": {
				"namespace": {
					"type": "string"
				}
			}
		},
		"v1.CreateClusterNamespaceResponse": {
			"required": [
				"exists"
			],
			"properties": {
				"exists": {
					"type": "boolean"
				}
			}
		},
		"v1.CreateClusterRequest": {
			"required": [
				"name",
				"icon"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"dashboardURL": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"icon": {
					"type": "string"
				},
				"kubeConfig": {
					"type": "string"
				},
				"kubeConfigSecret": {
					"type": "string"
				},
				"labels": {
					"type": "object",
					"additionalProperties": {
						"type": "string"
					}
				},
				"name": {
					"type": "string"
				}
			}
		},
		"v1.CreateComponentRequest": {
			"required": [
				"name",
				"componentType"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"componentType": {
					"type": "string"
				},
				"dependsOn": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"description": {
					"type": "string"
				},
				"icon": {
					"type": "string"
				},
				"inputs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/common.inputItem"
					}
				},
				"labels": {
					"type": "object",
					"additionalProperties": {
						"type": "string"
					}
				},
				"name": {
					"type": "string"
				},
				"outputs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/common.outputItem"
					}
				},
				"properties": {
					"type": "string"
				},
				"traits": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.CreateApplicationTraitRequest"
					}
				}
			}
		},
		"v1.CreateConfigRequest": {
			"required": [
				"name",
				"alias",
				"project",
				"componentType"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"componentType": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"project": {
					"type": "string"
				},
				"properties": {
					"type": "string"
				}
			}
		},
		"v1.CreateEnvRequest": {
			"required": [
				"name",
				"project",
				"namespace"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"namespace": {
					"type": "string"
				},
				"project": {
					"type": "string"
				},
				"targets": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"v1.CreatePolicyRequest": {
			"required": [
				"name",
				"description",
				"type",
				"properties"
			],
			"properties": {
				"description": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"properties": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"v1.CreateProjectRequest": {
			"required": [
				"name"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"owner": {
					"type": "string"
				}
			}
		},
		"v1.CreateRoleRequest": {
			"required": [
				"name",
				"alias",
				"permissions"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"permissions": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"v1.CreateTargetRequest": {
			"required": [
				"name",
				"project"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"cluster": {
					"$ref": "#/definitions/v1.ClusterTarget"
				},
				"description": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"project": {
					"type": "string"
				},
				"variable": {
					"type": "object"
				}
			}
		},
		"v1.CreateUserRequest": {
			"required": [
				"name",
				"email",
				"password",
				"roles"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"email": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"password": {
					"type": "string"
				},
				"roles": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"v1.CreateWorkflowRequest": {
			"required": [
				"name",
				"default",
				"envName"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"default": {
					"type": "boolean"
				},
				"description": {
					"type": "string"
				},
				"envName": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"steps": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.WorkflowStep"
					}
				}
			}
		},
		"v1.DefinitionBase": {
			"required": [
				"name",
				"description",
				"icon"
			],
			"properties": {
				"component": {
					"$ref": "#/definitions/v1beta1.ComponentDefinitionSpec"
				},
				"description": {
					"type": "string"
				},
				"icon": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"policy": {
					"$ref": "#/definitions/v1beta1.PolicyDefinitionSpec"
				},
				"trait": {
					"$ref": "#/definitions/v1beta1.TraitDefinitionSpec"
				},
				"workflowStep": {
					"$ref": "#/definitions/v1beta1.WorkflowStepDefinitionSpec"
				},
				"workloadType": {
					"type": "string"
				}
			}
		},
		"v1.DetailAddonResponse": {
			"required": [
				"version",
				"description",
				"invisible",
				"name",
				"icon",
				"schema",
				"uiSchema",
				"definitions",
				"availableVersions"
			],
			"properties": {
				"availableVersions": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"definitions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.AddonDefinition"
					}
				},
				"dependencies": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/addon.Dependency"
					}
				},
				"deployTo": {
					"$ref": "#/definitions/addon.DeployTo"
				},
				"description": {
					"type": "string"
				},
				"detail": {
					"type": "string"
				},
				"icon": {
					"type": "string"
				},
				"invisible": {
					"type": "boolean"
				},
				"name": {
					"type": "string"
				},
				"needNamespace": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"registryName": {
					"type": "string"
				},
				"schema": {
					"type": "string"
				},
				"system": {
					"$ref": "#/definitions/addon.SystemRequirements"
				},
				"tags": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"uiSchema": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/utils.UIParameter"
					}
				},
				"url": {
					"type": "string"
				},
				"version": {
					"type": "string"
				}
			}
		},
		"v1.DetailApplicationResponse": {
			"required": [
				"icon",
				"project",
				"description",
				"createTime",
				"name",
				"alias",
				"updateTime",
				"policies",
				"envBindings",
				"applicationType",
				"resourceInfo"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"applicationType": {
					"type": "string"
				},
				"createTime": {
					"type": "string",
					"format": "date-time"
				},
				"description": {
					"type": "string"
				},
				"envBindings": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"icon": {
					"type": "string"
				},
				"labels": {
					"type": "object",
					"additionalProperties": {
						"type": "string"
					}
				},
				"name": {
					"type": "string"
				},
				"policies": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"project": {
					"$ref": "#/definitions/v1.ProjectBase"
				},
				"readOnly": {
					"type": "boolean"
				},
				"resourceInfo": {
					"$ref": "#/definitions/v1.ApplicationResourceInfo"
				},
				"updateTime": {
					"type": "string",
					"format": "date-time"
				}
			}
		},
		"v1.DetailClusterResponse": {
			"required": [
				"reason",
				"provider",
				"name",
				"alias",
				"icon",
				"dashboardURL",
				"createTime",
				"description",
				"status",
				"updateTime",
				"apiServerURL",
				"kubeConfig",
				"labels",
				"kubeConfigSecret",
				"resourceInfo"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"apiServerURL": {
					"type": "string"
				},
				"createTime": {
					"type": "string",
					"format": "date-time"
				},
				"dashboardURL": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"icon": {
					"type": "string"
				},
				"kubeConfig": {
					"type": "string"
				},
				"kubeConfigSecret": {
					"type": "string"
				},
				"labels": {
					"type": "object",
					"additionalProperties": {
						"type": "string"
					}
				},
				"name": {
					"type": "string"
				},
				"provider": {
					"$ref": "#/definitions/model.ProviderInfo"
				},
				"reason": {
					"type": "string"
				},
				"resourceInfo": {
					"$ref": "#/definitions/v1.ClusterResourceInfo"
				},
				"status": {
					"type": "string"
				},
				"updateTime": {
					"type": "string",
					"format": "date-time"
				}
			}
		},
		"v1.DetailComponentResponse": {
			"required": [
				"name",
				"updateTime",
				"createTime",
				"creator",
				"alias",
				"type",
				"main",
				"appPrimaryKey",
				"definition"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"appPrimaryKey": {
					"type": "string"
				},
				"createTime": {
					"type": "string",
					"format": "date-time"
				},
				"creator": {
					"type": "string"
				},
				"definition": {
					"$ref": "#/definitions/v1beta1.ComponentDefinitionSpec"
				},
				"dependsOn": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"description": {
					"type": "string"
				},
				"externalRevision": {
					"type": "string"
				},
				"icon": {
					"type": "string"
				},
				"inputs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/common.inputItem"
					}
				},
				"labels": {
					"type": "object",
					"additionalProperties": {
						"type": "string"
					}
				},
				"main": {
					"type": "boolean"
				},
				"name": {
					"type": "string"
				},
				"outputs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/common.outputItem"
					}
				},
				"properties": {
					"$ref": "#/definitions/model.JSONStruct"
				},
				"scopes": {
					"type": "object",
					"additionalProperties": {
						"type": "string"
					}
				},
				"traits": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/model.ApplicationTrait"
					}
				},
				"type": {
					"type": "string"
				},
				"updateTime": {
					"type": "string",
					"format": "date-time"
				}
			}
		},
		"v1.DetailDefinitionResponse": {
			"required": [
				"schema",
				"uiSchema"
			],
			"properties": {
				"schema": {
					"type": "string"
				},
				"uiSchema": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/utils.UIParameter"
					}
				}
			}
		},
		"v1.DetailPolicyResponse": {
			"required": [
				"name",
				"type",
				"description",
				"creator",
				"properties",
				"createTime",
				"updateTime"
			],
			"properties": {
				"createTime": {
					"type": "string",
					"format": "date-time"
				},
				"creator": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"properties": {
					"$ref": "#/definitions/model.JSONStruct"
				},
				"type": {
					"type": "string"
				},
				"updateTime": {
					"type": "string",
					"format": "date-time"
				}
			}
		},
		"v1.DetailRevisionResponse": {
			"required": [
				"triggerType",
				"updateTime",
				"version",
				"reason",
				"createTime",
				"status",
				"deployUser",
				"note",
				"workflowName",
				"envName",
				"appPrimaryKey"
			],
			"properties": {
				"appPrimaryKey": {
					"type": "string"
				},
				"applyAppConfig": {
					"type": "string"
				},
				"codeInfo": {
					"$ref": "#/definitions/model.CodeInfo"
				},
				"createTime": {
					"type": "string",
					"format": "date-time"
				},
				"deployUser": {
					"type": "string"
				},
				"envName": {
					"type": "string"
				},
				"imageInfo": {
					"$ref": "#/definitions/model.ImageInfo"
				},
				"note": {
					"type": "string"
				},
				"reason": {
					"type": "string"
				},
				"rollbackVersion": {
					"type": "string"
				},
				"status": {
					"type": "string"
				},
				"triggerType": {
					"type": "string"
				},
				"updateTime": {
					"type": "string",
					"format": "date-time"
				},
				"version": {
					"type": "string"
				},
				"workflowName": {
					"type": "string"
				}
			}
		},
		"v1.DetailTargetResponse": {
			"required": [
				"project",
				"createTime",
				"updateTime",
				"name"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"appNum": {
					"type": "integer",
					"format": "int64"
				},
				"cluster": {
					"$ref": "#/definitions/v1.ClusterTarget"
				},
				"clusterAlias": {
					"type": "string"
				},
				"createTime": {
					"type": "string",
					"format": "date-time"
				},
				"description": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"project": {
					"$ref": "#/definitions/v1.NameAlias"
				},
				"updateTime": {
					"type": "string",
					"format": "date-time"
				},
				"variable": {
					"type": "object"
				}
			}
		},
		"v1.DetailUserResponse": {
			"required": [
				"lastLoginTime",
				"name",
				"email",
				"disabled",
				"createTime",
				"projects",
				"roles"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"createTime": {
					"type": "string",
					"format": "date-time"
				},
				"disabled": {
					"type": "boolean"
				},
				"email": {
					"type": "string"
				},
				"lastLoginTime": {
					"type": "string",
					"format": "date-time"
				},
				"name": {
					"type": "string"
				},
				"projects": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.ProjectBase"
					}
				},
				"roles": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.NameAlias"
					}
				}
			}
		},
		"v1.DetailWorkflowRecordResponse": {
			"required": [
				"name",
				"namespace",
				"workflowName",
				"workflowAlias",
				"applicationRevision",
				"status",
				"deployTime",
				"deployUser",
				"note",
				"triggerType"
			],
			"properties": {
				"applicationRevision": {
					"type": "string"
				},
				"deployTime": {
					"type": "string",
					"format": "date-time"
				},
				"deployUser": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"namespace": {
					"type": "string"
				},
				"note": {
					"type": "string"
				},
				"startTime": {
					"type": "string",
					"format": "date-time"
				},
				"status": {
					"type": "string"
				},
				"steps": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/model.WorkflowStepStatus"
					}
				},
				"triggerType": {
					"type": "string"
				},
				"workflowAlias": {
					"type": "string"
				},
				"workflowName": {
					"type": "string"
				}
			}
		},
		"v1.DetailWorkflowResponse": {
			"required": [
				"updateTime",
				"name",
				"enable",
				"default",
				"envName",
				"createTime",
				"alias",
				"description"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"createTime": {
					"type": "string",
					"format": "date-time"
				},
				"default": {
					"type": "boolean"
				},
				"description": {
					"type": "string"
				},
				"enable": {
					"type": "boolean"
				},
				"envName": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"steps": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.WorkflowStep"
					}
				},
				"updateTime": {
					"type": "string",
					"format": "date-time"
				}
			}
		},
		"v1.DexConfigResponse": {
			"required": [
				"clientID",
				"clientSecret",
				"redirectURL",
				"issuer"
			],
			"properties": {
				"clientID": {
					"type": "string"
				},
				"clientSecret": {
					"type": "string"
				},
				"issuer": {
					"type": "string"
				},
				"redirectURL": {
					"type": "string"
				}
			}
		},
		"v1.EmptyResponse": {},
		"v1.EnableAddonRequest": {
			"properties": {
				"args": {
					"type": "object"
				},
				"clusters": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"version": {
					"type": "string"
				}
			}
		},
		"v1.EnablingProgress": {
			"required": [
				"enabled_components",
				"total_components"
			],
			"properties": {
				"enabled_components": {
					"type": "integer",
					"format": "int32"
				},
				"total_components": {
					"type": "integer",
					"format": "int32"
				}
			}
		},
		"v1.Env": {
			"required": [
				"name",
				"alias",
				"project",
				"namespace",
				"createTime",
				"updateTime"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"createTime": {
					"type": "string",
					"format": "date-time"
				},
				"description": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"namespace": {
					"type": "string"
				},
				"project": {
					"$ref": "#/definitions/v1.NameAlias"
				},
				"targets": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.NameAlias"
					}
				},
				"updateTime": {
					"type": "string",
					"format": "date-time"
				}
			}
		},
		"v1.EnvBinding": {
			"required": [
				"name"
			],
			"properties": {
				"name": {
					"type": "string"
				}
			}
		},
		"v1.EnvBindingBase": {
			"required": [
				"name",
				"targetNames",
				"createTime",
				"updateTime",
				"appDeployName",
				"appDeployNamespace"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"appDeployName": {
					"type": "string"
				},
				"appDeployNamespace": {
					"type": "string"
				},
				"componentSelector": {
					"$ref": "#/definitions/v1.ComponentSelector"
				},
				"createTime": {
					"type": "string",
					"format": "date-time"
				},
				"description": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"targetNames": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"targets": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.EnvBindingTarget"
					}
				},
				"updateTime": {
					"type": "string",
					"format": "date-time"
				}
			}
		},
		"v1.EnvBindingTarget": {
			"required": [
				"alias",
				"name"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"cluster": {
					"$ref": "#/definitions/v1.ClusterTarget"
				},
				"name": {
					"type": "string"
				}
			}
		},
		"v1.GetLoginTypeResponse": {
			"required": [
				"loginType"
			],
			"properties": {
				"loginType": {
					"type": "string"
				}
			}
		},
		"v1.HandleApplicationTriggerWebhookRequest": {
			"properties": {
				"codeInfo": {
					"$ref": "#/definitions/model.CodeInfo"
				},
				"upgrade": {
					"type": "object",
					"additionalProperties": {
						"$ref": "#/definitions/model.JSONStruct"
					}
				}
			}
		},
		"v1.ListAddonRegistryResponse": {
			"required": [
				"registries"
			],
			"properties": {
				"registries": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.AddonRegistry"
					}
				}
			}
		},
		"v1.ListAddonResponse": {
			"required": [
				"addons"
			],
			"properties": {
				"addons": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.AddonInfo"
					}
				},
				"message": {
					"type": "string"
				}
			}
		},
		"v1.ListApplicationEnvBinding": {
			"required": [
				"envBindings"
			],
			"properties": {
				"envBindings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.EnvBindingBase"
					}
				}
			}
		},
		"v1.ListApplicationPolicy": {
			"required": [
				"policies"
			],
			"properties": {
				"policies": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.PolicyBase"
					}
				}
			}
		},
		"v1.ListApplicationResponse": {
			"required": [
				"applications"
			],
			"properties": {
				"applications": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.ApplicationBase"
					}
				}
			}
		},
		"v1.ListApplicationTriggerResponse": {
			"required": [
				"triggers"
			],
			"properties": {
				"triggers": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.ApplicationTriggerBase"
					}
				}
			}
		},
		"v1.ListCloudClusterCreationResponse": {
			"required": [
				"creations"
			],
			"properties": {
				"creations": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.CreateCloudClusterResponse"
					}
				}
			}
		},
		"v1.ListCloudClusterResponse": {
			"required": [
				"clusters",
				"total"
			],
			"properties": {
				"clusters": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/cloudprovider.CloudCluster"
					}
				},
				"total": {
					"type": "integer",
					"format": "int32"
				}
			}
		},
		"v1.ListClusterResponse": {
			"required": [
				"clusters",
				"total"
			],
			"properties": {
				"clusters": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.ClusterBase"
					}
				},
				"total": {
					"type": "integer",
					"format": "int64"
				}
			}
		},
		"v1.ListDefinitionResponse": {
			"required": [
				"definitions"
			],
			"properties": {
				"definitions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.DefinitionBase"
					}
				}
			}
		},
		"v1.ListEnvResponse": {
			"required": [
				"envs",
				"total"
			],
			"properties": {
				"envs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.Env"
					}
				},
				"total": {
					"type": "integer",
					"format": "int64"
				}
			}
		},
		"v1.ListPolicyDefinitionResponse": {
			"required": [
				"policyDefinitions"
			],
			"properties": {
				"policyDefinitions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.PolicyDefinition"
					}
				}
			}
		},
		"v1.ListProjectResponse": {
			"required": [
				"projects",
				"total"
			],
			"properties": {
				"projects": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.ProjectBase"
					}
				},
				"total": {
					"type": "integer",
					"format": "int64"
				}
			}
		},
		"v1.ListProjectUsersResponse": {
			"required": [
				"users",
				"total"
			],
			"properties": {
				"total": {
					"type": "integer",
					"format": "int64"
				},
				"users": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.ProjectUserBase"
					}
				}
			}
		},
		"v1.ListRevisionsResponse": {
			"required": [
				"revisions",
				"total"
			],
			"properties": {
				"revisions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.ApplicationRevisionBase"
					}
				},
				"total": {
					"type": "integer",
					"format": "int64"
				}
			}
		},
		"v1.ListRolesResponse": {
			"required": [
				"total",
				"roles"
			],
			"properties": {
				"roles": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.RoleBase"
					}
				},
				"total": {
					"type": "integer",
					"format": "int64"
				}
			}
		},
		"v1.ListTargetResponse": {
			"required": [
				"targets",
				"total"
			],
			"properties": {
				"targets": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.TargetBase"
					}
				},
				"total": {
					"type": "integer",
					"format": "int64"
				}
			}
		},
		"v1.ListUserResponse": {
			"required": [
				"users",
				"total"
			],
			"properties": {
				"total": {
					"type": "integer",
					"format": "int64"
				},
				"users": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.DetailUserResponse"
					}
				}
			}
		},
		"v1.ListWorkflowRecordsResponse": {
			"required": [
				"records",
				"total"
			],
			"properties": {
				"records": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.WorkflowRecord"
					}
				},
				"total": {
					"type": "integer",
					"format": "int64"
				}
			}
		},
		"v1.ListWorkflowResponse": {
			"required": [
				"workflows"
			],
			"properties": {
				"workflows": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.WorkflowBase"
					}
				}
			}
		},
		"v1.LoginRequest": {
			"properties": {
				"code": {
					"type": "string"
				},
				"password": {
					"type": "string"
				},
				"username": {
					"type": "string"
				}
			}
		},
		"v1.LoginResponse": {
			"required": [
				"user",
				"accessToken",
				"refreshToken"
			],
			"properties": {
				"accessToken": {
					"type": "string"
				},
				"refreshToken": {
					"type": "string"
				},
				"user": {
					"$ref": "#/definitions/v1.UserBase"
				}
			}
		},
		"v1.LoginUserInfoResponse": {
			"required": [
				"createTime",
				"lastLoginTime",
				"name",
				"email",
				"disabled",
				"projects",
				"platformPermissions",
				"projectPermissions"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"createTime": {
					"type": "string",
					"format": "date-time"
				},
				"disabled": {
					"type": "boolean"
				},
				"email": {
					"type": "string"
				},
				"lastLoginTime": {
					"type": "string",
					"format": "date-time"
				},
				"name": {
					"type": "string"
				},
				"platformPermissions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.PermissionBase"
					}
				},
				"projectPermissions": {
					"type": "object",
					"additionalProperties": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/v1.PermissionBase"
						}
					}
				},
				"projects": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.ProjectBase"
					}
				}
			}
		},
		"v1.NameAlias": {
			"required": [
				"name",
				"alias"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"name": {
					"type": "string"
				}
			}
		},
		"v1.ObjectReference": {
			"description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
			"properties": {
				"apiVersion": {
					"description": "API version of the referent.",
					"type": "string"
				},
				"fieldPath": {
					"description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.",
					"type": "string"
				},
				"kind": {
					"description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
					"type": "string"
				},
				"name": {
					"description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
					"type": "string"
				},
				"namespace": {
					"description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
					"type": "string"
				},
				"resourceVersion": {
					"description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
					"type": "string"
				},
				"uid": {
					"description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
					"type": "string"
				}
			}
		},
		"v1.PermissionBase": {
			"required": [
				"name",
				"alias",
				"resources",
				"actions",
				"effect",
				"createTime",
				"updateTime"
			],
			"properties": {
				"actions": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"alias": {
					"type": "string"
				},
				"createTime": {
					"type": "string",
					"format": "date-time"
				},
				"effect": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"resources": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"updateTime": {
					"type": "string",
					"format": "date-time"
				}
			}
		},
		"v1.PolicyBase": {
			"required": [
				"name",
				"type",
				"description",
				"creator",
				"properties",
				"createTime",
				"updateTime"
			],
			"properties": {
				"createTime": {
					"type": "string",
					"format": "date-time"
				},
				"creator": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"properties": {
					"$ref": "#/definitions/model.JSONStruct"
				},
				"type": {
					"type": "string"
				},
				"updateTime": {
					"type": "string",
					"format": "date-time"
				}
			}
		},
		"v1.PolicyDefinition": {
			"required": [
				"name",
				"description",
				"parameters"
			],
			"properties": {
				"description": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"parameters": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/types.Parameter"
					}
				}
			}
		},
		"v1.ProjectBase": {
			"required": [
				"name",
				"alias",
				"description",
				"createTime",
				"updateTime"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"createTime": {
					"type": "string",
					"format": "date-time"
				},
				"description": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"owner": {
					"$ref": "#/definitions/v1.NameAlias"
				},
				"updateTime": {
					"type": "string",
					"format": "date-time"
				}
			}
		},
		"v1.ProjectUserBase": {
			"required": [
				"name",
				"userRoles",
				"createTime",
				"updateTime"
			],
			"properties": {
				"createTime": {
					"type": "string",
					"format": "date-time"
				},
				"name": {
					"type": "string"
				},
				"updateTime": {
					"type": "string",
					"format": "date-time"
				},
				"userRoles": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"v1.PutApplicationEnvBindingRequest": {},
		"v1.RefreshTokenResponse": {
			"required": [
				"accessToken",
				"refreshToken"
			],
			"properties": {
				"accessToken": {
					"type": "string"
				},
				"refreshToken": {
					"type": "string"
				}
			}
		},
		"v1.RoleBase": {
			"required": [
				"createTime",
				"updateTime",
				"name",
				"permissions"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"createTime": {
					"type": "string",
					"format": "date-time"
				},
				"name": {
					"type": "string"
				},
				"permissions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.NameAlias"
					}
				},
				"updateTime": {
					"type": "string",
					"format": "date-time"
				}
			}
		},
		"v1.SimpleResponse": {
			"required": [
				"status"
			],
			"properties": {
				"status": {
					"type": "string"
				}
			}
		},
		"v1.SystemInfo": {
			"required": [
				"installID",
				"enableCollection",
				"loginType"
			],
			"properties": {
				"enableCollection": {
					"type": "boolean"
				},
				"installID": {
					"type": "string"
				},
				"loginType": {
					"type": "string"
				}
			}
		},
		"v1.SystemInfoRequest": {
			"required": [
				"enableCollection",
				"loginType"
			],
			"properties": {
				"enableCollection": {
					"type": "boolean"
				},
				"loginType": {
					"type": "string"
				},
				"velaAddress": {
					"type": "string"
				}
			}
		},
		"v1.SystemInfoResponse": {
			"required": [
				"installID",
				"enableCollection",
				"loginType",
				"systemVersion"
			],
			"properties": {
				"enableCollection": {
					"type": "boolean"
				},
				"installID": {
					"type": "string"
				},
				"loginType": {
					"type": "string"
				},
				"systemVersion": {
					"$ref": "#/definitions/v1.SystemVersion"
				}
			}
		},
		"v1.SystemVersion": {
			"required": [
				"velaVersion",
				"gitVersion"
			],
			"properties": {
				"gitVersion": {
					"type": "string"
				},
				"velaVersion": {
					"type": "string"
				}
			}
		},
		"v1.TargetBase": {
			"required": [
				"name",
				"createTime",
				"updateTime",
				"project"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"appNum": {
					"type": "integer",
					"format": "int64"
				},
				"cluster": {
					"$ref": "#/definitions/v1.ClusterTarget"
				},
				"clusterAlias": {
					"type": "string"
				},
				"createTime": {
					"type": "string",
					"format": "date-time"
				},
				"description": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"project": {
					"$ref": "#/definitions/v1.NameAlias"
				},
				"updateTime": {
					"type": "string",
					"format": "date-time"
				},
				"variable": {
					"type": "object"
				}
			}
		},
		"v1.UpdateAddonRegistryRequest": {
			"properties": {
				"git": {
					"$ref": "#/definitions/addon.GitAddonSource"
				},
				"gitee": {
					"$ref": "#/definitions/addon.GiteeAddonSource"
				},
				"gitlab": {
					"$ref": "#/definitions/addon.GitlabAddonSource"
				},
				"helm": {
					"$ref": "#/definitions/addon.HelmSource"
				},
				"oss": {
					"$ref": "#/definitions/addon.OSSAddonSource"
				}
			}
		},
		"v1.UpdateApplicationComponentRequest": {
			"properties": {
				"alias": {
					"type": "string"
				},
				"dependsOn": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"description": {
					"type": "string"
				},
				"icon": {
					"type": "string"
				},
				"labels": {
					"$ref": "#/definitions/v1.UpdateApplicationComponentRequest.labels"
				},
				"properties": {
					"type": "string"
				}
			}
		},
		"v1.UpdateApplicationComponentRequest.labels": {
			"type": "object",
			"additionalProperties": {
				"type": "string"
			}
		},
		"v1.UpdateApplicationRequest": {
			"properties": {
				"alias": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"icon": {
					"type": "string"
				},
				"labels": {
					"type": "object",
					"additionalProperties": {
						"type": "string"
					}
				}
			}
		},
		"v1.UpdateApplicationTraitRequest": {
			"required": [
				"properties"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"properties": {
					"type": "string"
				}
			}
		},
		"v1.UpdatePolicyRequest": {
			"required": [
				"description",
				"type",
				"properties"
			],
			"properties": {
				"description": {
					"type": "string"
				},
				"properties": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"v1.UpdateProjectRequest": {
			"properties": {
				"alias": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"owner": {
					"type": "string"
				}
			}
		},
		"v1.UpdateProjectUserRequest": {
			"required": [
				"userRoles"
			],
			"properties": {
				"userRoles": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"v1.UpdateRoleRequest": {
			"required": [
				"alias",
				"permissions"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"permissions": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"v1.UpdateTargetRequest": {
			"properties": {
				"alias": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"variable": {
					"type": "object"
				}
			}
		},
		"v1.UpdateWorkflowRequest": {
			"required": [
				"default"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"default": {
					"type": "boolean"
				},
				"description": {
					"type": "string"
				},
				"steps": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.WorkflowStep"
					}
				}
			}
		},
		"v1.UserBase": {
			"required": [
				"createTime",
				"lastLoginTime",
				"name",
				"email",
				"disabled"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"createTime": {
					"type": "string",
					"format": "date-time"
				},
				"disabled": {
					"type": "boolean"
				},
				"email": {
					"type": "string"
				},
				"lastLoginTime": {
					"type": "string",
					"format": "date-time"
				},
				"name": {
					"type": "string"
				}
			}
		},
		"v1.VelaQLViewResponse": {
			"type": "object"
		},
		"v1.WorkflowBase": {
			"required": [
				"name",
				"alias",
				"description",
				"enable",
				"default",
				"envName",
				"createTime",
				"updateTime"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"createTime": {
					"type": "string",
					"format": "date-time"
				},
				"default": {
					"type": "boolean"
				},
				"description": {
					"type": "string"
				},
				"enable": {
					"type": "boolean"
				},
				"envName": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"steps": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1.WorkflowStep"
					}
				},
				"updateTime": {
					"type": "string",
					"format": "date-time"
				}
			}
		},
		"v1.WorkflowRecord": {
			"required": [
				"name",
				"namespace",
				"workflowName",
				"workflowAlias",
				"applicationRevision",
				"status"
			],
			"properties": {
				"applicationRevision": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"namespace": {
					"type": "string"
				},
				"startTime": {
					"type": "string",
					"format": "date-time"
				},
				"status": {
					"type": "string"
				},
				"steps": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/model.WorkflowStepStatus"
					}
				},
				"workflowAlias": {
					"type": "string"
				},
				"workflowName": {
					"type": "string"
				}
			}
		},
		"v1.WorkflowStep": {
			"required": [
				"name",
				"type"
			],
			"properties": {
				"alias": {
					"type": "string"
				},
				"dependsOn": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"description": {
					"type": "string"
				},
				"inputs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/common.inputItem"
					}
				},
				"name": {
					"type": "string"
				},
				"outputs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/common.outputItem"
					}
				},
				"properties": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"v1beta1.AppPolicy": {
			"required": [
				"name",
				"type"
			],
			"properties": {
				"name": {
					"type": "string"
				},
				"properties": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"v1beta1.ApplicationSpec": {
			"required": [
				"components"
			],
			"properties": {
				"components": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/common.ApplicationComponent"
					}
				},
				"policies": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1beta1.AppPolicy"
					}
				},
				"workflow": {
					"$ref": "#/definitions/v1beta1.Workflow"
				}
			}
		},
		"v1beta1.ComponentDefinitionSpec": {
			"required": [
				"workload"
			],
			"properties": {
				"childResourceKinds": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/common.ChildResourceKind"
					}
				},
				"extension": {
					"type": "string"
				},
				"podSpecPath": {
					"type": "string"
				},
				"revisionLabel": {
					"type": "string"
				},
				"schematic": {
					"$ref": "#/definitions/common.Schematic"
				},
				"status": {
					"$ref": "#/definitions/common.Status"
				},
				"workload": {
					"$ref": "#/definitions/common.WorkloadTypeDescriptor"
				}
			}
		},
		"v1beta1.PolicyDefinitionSpec": {
			"properties": {
				"definitionRef": {
					"$ref": "#/definitions/common.DefinitionReference"
				},
				"manageHealthCheck": {
					"type": "boolean"
				},
				"schematic": {
					"$ref": "#/definitions/common.Schematic"
				}
			}
		},
		"v1beta1.TraitDefinitionSpec": {
			"properties": {
				"appliesToWorkloads": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"conflictsWith": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"definitionRef": {
					"$ref": "#/definitions/common.DefinitionReference"
				},
				"extension": {
					"type": "string"
				},
				"manageWorkload": {
					"type": "boolean"
				},
				"podDisruptive": {
					"type": "boolean"
				},
				"revisionEnabled": {
					"type": "boolean"
				},
				"schematic": {
					"$ref": "#/definitions/common.Schematic"
				},
				"skipRevisionAffect": {
					"type": "boolean"
				},
				"status": {
					"$ref": "#/definitions/common.Status"
				},
				"workloadRefPath": {
					"type": "string"
				}
			}
		},
		"v1beta1.Workflow": {
			"properties": {
				"ref": {
					"type": "string"
				},
				"steps": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/v1beta1.WorkflowStep"
					}
				}
			}
		},
		"v1beta1.WorkflowStep": {
			"required": [
				"name",
				"type"
			],
			"properties": {
				"dependsOn": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"inputs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/common.inputItem"
					}
				},
				"name": {
					"type": "string"
				},
				"outputs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/common.outputItem"
					}
				},
				"properties": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"v1beta1.WorkflowStepDefinitionSpec": {
			"properties": {
				"definitionRef": {
					"$ref": "#/definitions/common.DefinitionReference"
				},
				"schematic": {
					"$ref": "#/definitions/common.Schematic"
				}
			}
		},
		"v1beta2.BaseConfigurationSpec": {
			"properties": {
				"customRegion": {
					"type": "string"
				},
				"deleteResource": {
					"type": "boolean"
				},
				"providerRef": {
					"$ref": "#/definitions/types.Reference"
				},
				"writeConnectionSecretToRef": {
					"$ref": "#/definitions/types.SecretReference"
				}
			}
		}
	}
}