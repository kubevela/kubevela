apiVersion: v1
data:
  application: |
    apiVersion: core.oam.dev/v1beta1
    kind: Application
    metadata:
      annotations:
        addons.oam.dev/description: Kubernetes Terraform Controller for Azure
        addons.oam.dev/name: terraform-azure
      name: terraform-azure
      namespace: vela-system
    spec:
      components:
      - name: azure-account-creds
        properties:
          apiVersion: v1
          kind: Secret
          metadata:
            name: azure-account-creds
            namespace: vela-system
          stringData:
            credentials: |
              armClientID: [[ index .Args "ARM_CLIENT_ID" ]]
              armClientSecret: [[ index .Args "ARM_CLIENT_SECRET" ]]
              armSubscriptionID: [[ index .Args "ARM_SUBSCRIPTION_ID" ]]
              armTenantID: [[ index .Args "ARM_TENANT_ID" ]]
          type: Opaque
        type: raw
      - name: azure
        properties:
          apiVersion: terraform.core.oam.dev/v1beta1
          kind: Provider
          metadata:
            name: azure
            namespace: default
          spec:
            credentials:
              secretRef:
                key: credentials
                name: azure-account-creds
                namespace: vela-system
              source: Secret
            provider: azure
        type: raw
      - name: azure-database-mariadb
        properties:
          apiVersion: core.oam.dev/v1alpha2
          kind: ComponentDefinition
          metadata:
            annotations:
              definition.oam.dev/description: Terraform configuration for Azure Database
                Mariadb
              provider: azure
            labels:
              type: terraform
            name: azure-database-mariadb
            namespace: vela-system
          spec:
            schematic:
              terraform:
                configuration: |
                  # Configure the Microsoft Azure Provider
                  provider "azurerm" {
                    features {}
                  }

                  resource "azurerm_resource_group" "example" {
                    name = var.resource_group
                    location = var.location
                  }

                  resource "azurerm_mariadb_server" "example" {
                    name = var.server_name
                    location = var.location
                    resource_group_name = azurerm_resource_group.example.name

                    sku_name = "B_Gen5_2"

                    storage_mb = 51200
                    backup_retention_days = 7
                    geo_redundant_backup_enabled = false

                    administrator_login = var.username
                    administrator_login_password = var.password
                    version = "10.2"
                    ssl_enforcement_enabled = true
                  }

                  resource "azurerm_mariadb_database" "example" {
                    name = var.db_name
                    resource_group_name = azurerm_resource_group.example.name
                    server_name = azurerm_mariadb_server.example.name
                    charset = "utf8"
                    collation = "utf8_general_ci"
                  }

                  variable "server_name" {
                    type = string
                    description = "mariadb server name"
                    default = "mariadb-svr-sample"
                  }

                  variable "db_name" {
                    default = "backend"
                    type = string
                    description = "Database instance name"
                  }

                  variable "username" {
                    default = "acctestun"
                    type = string
                    description = "Database instance username"
                  }

                  variable "password" {
                    default = "H@Sh1CoR3!faked"
                    type = string
                    description = "Database instance password"
                  }

                  variable "location" {
                    description = "Azure location"
                    type = string
                    default = "West Europe"
                  }

                  variable "resource_group" {
                    description = "Resource group"
                    type = string
                    default = "kubevela-group"
                  }

                  output "SERVER_NAME" {
                    value = var.server_name
                  }

                  output "DB_NAME" {
                    value = var.db_name
                  }
                  output "DB_USER" {
                    value = var.username
                  }
                  output "DB_PASSWORD" {
                    sensitive = true
                    value = var.password
                  }
                  output "DB_PORT" {
                    value = "3306"
                  }
                  output "DB_HOST" {
                    value = azurerm_mariadb_server.example.fqdn
                  }
                providerRef:
                  name: azure
                  namespace: default
            workload:
              definition:
                apiVersion: terraform.core.oam.dev/v1beta1
                kind: Configuration
        type: raw
      - name: azure-storage-account
        properties:
          apiVersion: core.oam.dev/v1alpha2
          kind: ComponentDefinition
          metadata:
            annotations:
              definition.oam.dev/description: Terraform configuration for Azure Blob Storage
                Account
              provider: azure
            labels:
              type: terraform
            name: azure-storage-account
            namespace: vela-system
          spec:
            schematic:
              terraform:
                configuration: |
                  # Configure the Microsoft Azure Provider
                  provider "azurerm" {
                    features {}
                  }

                  resource "azurerm_resource_group" "rsg" {
                    count    = var.create_rsg ? 1 : 0
                    name     = var.resource_group_name
                    location = var.location
                  }

                  resource "azurerm_storage_account" "sa" {
                    name                      = var.name
                    resource_group_name       = var.create_rsg ? azurerm_resource_group.rsg[0].name : var.resource_group_name
                    location                  = var.location
                    account_tier              = "Standard"
                    account_replication_type  = "GRS"
                    enable_https_traffic_only = true

                    dynamic "static_website" {
                      for_each = var.static_website
                      content {
                        index_document     = static_website.value["index_document"]
                        error_404_document = static_website.value["error_404_document"]
                      }
                    }

                    tags = var.tags
                  }

                  variable "create_rsg" {
                    description = "Conditional if resource group should be created. Defaults to 'true'."
                    type        = bool
                    default     = true
                  }

                  variable "resource_group_name" {
                    description = "Name of resource group. Defaults to 'rsg'."
                    type        = string
                    default     = "rsg"
                  }

                  variable "name" {
                    description = "Name of storage account. Defaults to 'storageaccount'."
                    type        = string
                    default     = "storageaccount"
                  }

                  variable "location" {
                    description = "Location of storage account. Defaults to 'West Europe'."
                    type        = string
                    default     = "West Europe"
                  }

                  variable "tags" {
                    description = "Tags for storage account. Defaults to '{}'."
                    type        = map(string)
                    default     = {}
                  }

                  variable "static_website" {
                    description = "Static website configuration. Defaults to disabled."
                    type        = list(map(string))
                    default     = [{
                      index_document = null
                      error_404_document = null
                    }]
                  }

                  output "BLOB_CONNECTION_STRING" {
                    description = "Blob storage connection string"
                    sensitive   = true
                    value       = azurerm_storage_account.sa.primary_connection_string
                  }

                  output "BLOB_WEB_ENDPOINT" {
                    description = "Blob storage static web endpoint"
                    value       = azurerm_storage_account.sa.primary_web_endpoint
                  }
                providerRef:
                  name: azure
                  namespace: default
            workload:
              definition:
                apiVersion: terraform.core.oam.dev/v1beta1
                kind: Configuration
        type: raw
      workflow:
        steps:
        - name: ""
          properties:
            name: terraform
            namespace: vela-system
          type: depends-on-app
        - name: ""
          type: apply-application
    status: {}
kind: ConfigMap
metadata:
  annotations:
    addons.oam.dev/description: Kubernetes Terraform Controller for Azure
    addons.oam.dev/name: terraform-azure
  labels:
    addons.oam.dev/type: terraform-azure
  name: terraform-azure
  namespace: {{.Values.systemDefinitionNamespace}}
