apiVersion: v1
data:
  application: |
    apiVersion: core.oam.dev/v1beta1
    kind: Application
    metadata:
      annotations:
        addons.oam.dev/description: Terraform Controller is a Kubernetes Controller for
          Terraform.
      name: terraform
      namespace: vela-system
    spec:
      components:
      - name: terraform-controller
        properties:
          chart: terraform-controller
          repoType: helm
          url: https://charts.kubevela.net/addons
          version: 0.2.10
        type: helm
      - name: alibaba-redis
        properties:
          apiVersion: core.oam.dev/v1beta1
          kind: ComponentDefinition
          metadata:
            annotations:
              definition.oam.dev/description: Terraform configuration for Alibaba Cloud
                Redis
            labels:
              type: terraform
            name: alibaba-redis
            namespace: vela-system
          spec:
            schematic:
              terraform:
                configuration: https://github.com/kubevela-contrib/terraform-modules/alibaba/redis
                type: remote
            workload:
              definition:
                apiVersion: terraform.core.oam.dev/v1beta1
                kind: Configuration
        type: raw
      - name: alibaba-ack
        properties:
          apiVersion: core.oam.dev/v1beta1
          kind: ComponentDefinition
          metadata:
            annotations:
              definition.oam.dev/description: Terraform configuration for Alibaba Cloud
                ACK cluster
            labels:
              type: terraform
            name: alibaba-ack
            namespace: vela-system
          spec:
            schematic:
              terraform:
                configuration: https://github.com/kubevela-contrib/terraform-modules.git
                path: alibaba/cs/dedicated-kubernetes
                type: remote
            workload:
              definition:
                apiVersion: terraform.core.oam.dev/v1beta1
                kind: Configuration
        type: raw
      - name: alibaba-ask
        properties:
          apiVersion: core.oam.dev/v1beta1
          kind: ComponentDefinition
          metadata:
            annotations:
              definition.oam.dev/description: Terraform configuration for Alibaba Cloud
                Serverless Kubernetes (ASK)
            labels:
              type: terraform
            name: alibaba-ask
            namespace: vela-system
          spec:
            schematic:
              terraform:
                configuration: https://github.com/kubevela-contrib/terraform-modules.git
                path: alibaba/cs/serverless-kubernetes
                type: remote
            workload:
              definition:
                apiVersion: terraform.core.oam.dev/v1beta1
                kind: Configuration
        type: raw
      - name: alibaba-eip
        properties:
          apiVersion: core.oam.dev/v1alpha2
          kind: ComponentDefinition
          metadata:
            annotations:
              definition.oam.dev/description: Terraform configuration for Alibaba Cloud
                Elastic IP
            labels:
              type: terraform
            name: alibaba-eip
            namespace: vela-system
          spec:
            schematic:
              terraform:
                configuration: https://github.com/oam-dev/terraform-alibaba-eip.git
                type: remote
            workload:
              definition:
                apiVersion: terraform.core.oam.dev/v1beta1
                kind: Configuration
        type: raw
      - name: alibaba-oss
        properties:
          apiVersion: core.oam.dev/v1alpha2
          kind: ComponentDefinition
          metadata:
            annotations:
              cloud-resource/console-url: https://oss.console.aliyun.com/bucket/oss-{ALICLOUD_REGION}/{BUCKET_NAME}/overview
              cloud-resource/identifier: BUCKET_NAME
              definition.oam.dev/description: Terraform configuration for Alibaba Cloud
                OSS object
            labels:
              type: terraform
            name: alibaba-oss
            namespace: vela-system
          spec:
            schematic:
              terraform:
                configuration: "resource \"alicloud_oss_bucket\" \"bucket-acl\" {\n  bucket
                  = var.bucket\n  acl = var.acl\n}\noutput \"BUCKET_NAME\" {\n  value
                  = \"${alicloud_oss_bucket.bucket-acl.bucket}.${alicloud_oss_bucket.bucket-acl.extranet_endpoint}\"\n}\nvariable
                  \"bucket\" {\n  description = \"OSS bucket name\"\n  default = \"vela-website\"\n
                  \ type = string\n}\nvariable \"acl\" {\n  description = \"OSS bucket
                  ACL, supported 'private', 'public-read', 'public-read-write'\"\n  default
                  = \"private\"\n  type = string\n} \n"
            workload:
              definition:
                apiVersion: terraform.core.oam.dev/v1beta1
                kind: Configuration
        type: raw
      - name: alibaba-rds
        properties:
          apiVersion: core.oam.dev/v1alpha2
          kind: ComponentDefinition
          metadata:
            annotations:
              cloud-resource/console-url: https://rdsnext.console.aliyun.com/detail/{DB_ID}/basicInfo?&region={ALICLOUD_REGION}
              cloud-resource/identifier: DB_ID
              cloud-resource/sensitive-outputs: DB_PASSWORD
              definition.oam.dev/description: Terraform configuration for Alibaba Cloud
                RDS object
            labels:
              type: terraform
            name: alibaba-rds
            namespace: vela-system
          spec:
            schematic:
              terraform:
                configuration: |
                  module "rds" {
                    source = "github.com/kubevela-contrib/terraform-alicloud-rds"
                    engine = "MySQL"
                    engine_version = "8.0"
                    instance_type = "rds.mysql.c1.large"
                    instance_storage = "20"
                    instance_name = var.instance_name
                    account_name = var.account_name
                    password = var.password
                    allocate_public_connection = var.allocate_public_connection
                    security_ips = ["0.0.0.0/0",]
                  }

                  output "DB_ID" {
                    value = module.rds.db_instance_id
                  }

                  output "DB_NAME" {
                    value = module.rds.this_db_instance_name
                  }
                  output "DB_USER" {
                    value = module.rds.this_db_database_account
                  }
                  output "DB_PORT" {
                    value = module.rds.this_db_instance_port
                  }
                  output "DB_HOST" {
                    value = module.rds.this_db_instance_connection_string
                  }
                  output "DB_PASSWORD" {
                    value = var.password
                  }
                  output "DB_PUBLIC_HOST" {
                    value = module.rds.db_public_connection_string
                  }

                  variable "instance_name" {
                    description = "RDS instance name"
                    type = string
                    default = "poc"
                  }

                  variable "account_name" {
                    description = "RDS instance user account name"
                    type = string
                    default = "oam"
                  }

                  variable "password" {
                    description = "RDS instance account password"
                    type = string
                    default = "Xyfff83jfewGGfaked"
                  }

                  variable "allocate_public_connection" {
                    description = "Whether to allocate public connection for a RDS instance."
                    type        = bool
                    default     = true
                  }
            workload:
              definition:
                apiVersion: terraform.core.oam.dev/v1beta1
                kind: Configuration
        type: raw
      - name: alibaba-sls-project
        properties:
          apiVersion: core.oam.dev/v1beta1
          kind: ComponentDefinition
          metadata:
            annotations:
              definition.oam.dev/description: Terraform configuration for Alibaba Cloud
                SLS Project
            labels:
              type: terraform
            name: alibaba-sls-project
            namespace: vela-system
          spec:
            schematic:
              terraform:
                configuration: https://github.com/kubevela-contrib/terraform-modules.git
                path: alibaba/sls/project
                type: remote
            workload:
              definition:
                apiVersion: terraform.core.oam.dev/v1beta1
                kind: Configuration
        type: raw
      - name: alibaba-sls-store
        properties:
          apiVersion: core.oam.dev/v1beta1
          kind: ComponentDefinition
          metadata:
            annotations:
              definition.oam.dev/description: Terraform configuration for Alibaba Cloud
                SLS Store
            labels:
              type: terraform
            name: alibaba-sls-store
            namespace: vela-system
          spec:
            schematic:
              terraform:
                configuration: https://github.com/kubevela-contrib/terraform-modules.git
                path: alibaba/sls/store
                type: remote
            workload:
              definition:
                apiVersion: terraform.core.oam.dev/v1beta1
                kind: Configuration
        type: raw
      - name: alibaba-vpc
        properties:
          apiVersion: core.oam.dev/v1beta1
          kind: ComponentDefinition
          metadata:
            annotations:
              definition.oam.dev/description: Terraform configuration for Alibaba Cloud
                VPC
            labels:
              type: terraform
            name: alibaba-vpc
            namespace: vela-system
          spec:
            schematic:
              terraform:
                configuration: https://github.com/kubevela-contrib/terraform-modules.git
                path: alibaba/vpc
                type: remote
            workload:
              definition:
                apiVersion: terraform.core.oam.dev/v1beta1
                kind: Configuration
        type: raw
      - name: alibaba-vswitch
        properties:
          apiVersion: core.oam.dev/v1beta1
          kind: ComponentDefinition
          metadata:
            annotations:
              definition.oam.dev/description: Terraform configuration for Alibaba Cloud
                VSwitch
            labels:
              type: terraform
            name: alibaba-vswitch
            namespace: vela-system
          spec:
            schematic:
              terraform:
                configuration: https://github.com/kubevela-contrib/terraform-modules.git
                path: alibaba/vswitch
                type: remote
            workload:
              definition:
                apiVersion: terraform.core.oam.dev/v1beta1
                kind: Configuration
        type: raw
      - name: aws-s3
        properties:
          apiVersion: core.oam.dev/v1alpha2
          kind: ComponentDefinition
          metadata:
            annotations:
              definition.oam.dev/description: Terraform configuration for AWS S3
            labels:
              type: terraform
            name: aws-s3
            namespace: vela-system
          spec:
            schematic:
              terraform:
                configuration: |
                  resource "aws_s3_bucket" "bucket-acl" {
                    bucket = var.bucket
                    acl    = var.acl
                  }

                  output "BUCKET_NAME" {
                    value = aws_s3_bucket.bucket-acl.bucket_domain_name
                  }

                  variable "bucket" {
                    description = "S3 bucket name"
                    default = "vela-website"
                    type = string
                  }

                  variable "acl" {
                    description = "S3 bucket ACL"
                    default = "private"
                    type = string
                  }
            workload:
              definition:
                apiVersion: terraform.core.oam.dev/v1beta1
                kind: Configuration
        type: raw
      - name: azure-database-mariadb
        properties:
          apiVersion: core.oam.dev/v1alpha2
          kind: ComponentDefinition
          metadata:
            annotations:
              definition.oam.dev/description: Terraform configuration for Azure Database
                Mariadb
              provider: azure
            labels:
              type: terraform
            name: azure-database-mariadb
            namespace: vela-system
          spec:
            schematic:
              terraform:
                configuration: |
                  # Configure the Microsoft Azure Provider
                  provider "azurerm" {
                    features {}
                  }

                  resource "azurerm_resource_group" "example" {
                    name = var.resource_group
                    location = var.location
                  }

                  resource "azurerm_mariadb_server" "example" {
                    name = var.server_name
                    location = var.location
                    resource_group_name = azurerm_resource_group.example.name

                    sku_name = "B_Gen5_2"

                    storage_mb = 51200
                    backup_retention_days = 7
                    geo_redundant_backup_enabled = false

                    administrator_login = var.username
                    administrator_login_password = var.password
                    version = "10.2"
                    ssl_enforcement_enabled = true
                  }

                  resource "azurerm_mariadb_database" "example" {
                    name = var.db_name
                    resource_group_name = azurerm_resource_group.example.name
                    server_name = azurerm_mariadb_server.example.name
                    charset = "utf8"
                    collation = "utf8_general_ci"
                  }

                  variable "server_name" {
                    type = string
                    description = "mariadb server name"
                    default = "mariadb-svr-sample"
                  }

                  variable "db_name" {
                    default = "backend"
                    type = string
                    description = "Database instance name"
                  }

                  variable "username" {
                    default = "acctestun"
                    type = string
                    description = "Database instance username"
                  }

                  variable "password" {
                    default = "H@Sh1CoR3!faked"
                    type = string
                    description = "Database instance password"
                  }

                  variable "location" {
                    description = "Azure location"
                    type = string
                    default = "West Europe"
                  }

                  variable "resource_group" {
                    description = "Resource group"
                    type = string
                    default = "kubevela-group"
                  }

                  output "SERVER_NAME" {
                    value = var.server_name
                  }

                  output "DB_NAME" {
                    value = var.db_name
                  }
                  output "DB_USER" {
                    value = var.username
                  }
                  output "DB_PASSWORD" {
                    sensitive = true
                    value = var.password
                  }
                  output "DB_PORT" {
                    value = "3306"
                  }
                  output "DB_HOST" {
                    value = azurerm_mariadb_server.example.fqdn
                  }
                providerRef:
                  name: azure
                  namespace: default
            workload:
              definition:
                apiVersion: terraform.core.oam.dev/v1beta1
                kind: Configuration
        type: raw
      - name: azure-storage-account
        properties:
          apiVersion: core.oam.dev/v1alpha2
          kind: ComponentDefinition
          metadata:
            annotations:
              definition.oam.dev/description: Terraform configuration for Azure Blob Storage
                Account
              provider: azure
            labels:
              type: terraform
            name: azure-storage-account
            namespace: vela-system
          spec:
            schematic:
              terraform:
                configuration: |
                  # Configure the Microsoft Azure Provider
                  provider "azurerm" {
                    features {}
                  }

                  resource "azurerm_resource_group" "rsg" {
                    count    = var.create_rsg ? 1 : 0
                    name     = var.resource_group_name
                    location = var.location
                  }

                  resource "azurerm_storage_account" "sa" {
                    name                      = var.name
                    resource_group_name       = var.create_rsg ? azurerm_resource_group.rsg[0].name : var.resource_group_name
                    location                  = var.location
                    account_tier              = "Standard"
                    account_replication_type  = "GRS"
                    enable_https_traffic_only = true

                    dynamic "static_website" {
                      for_each = var.static_website
                      content {
                        index_document     = static_website.value["index_document"]
                        error_404_document = static_website.value["error_404_document"]
                      }
                    }

                    tags = var.tags
                  }

                  variable "create_rsg" {
                    description = "Conditional if resource group should be created. Defaults to 'true'."
                    type        = bool
                    default     = true
                  }

                  variable "resource_group_name" {
                    description = "Name of resource group. Defaults to 'rsg'."
                    type        = string
                    default     = "rsg"
                  }

                  variable "name" {
                    description = "Name of storage account. Defaults to 'storageaccount'."
                    type        = string
                    default     = "storageaccount"
                  }

                  variable "location" {
                    description = "Location of storage account. Defaults to 'West Europe'."
                    type        = string
                    default     = "West Europe"
                  }

                  variable "tags" {
                    description = "Tags for storage account. Defaults to '{}'."
                    type        = map(string)
                    default     = {}
                  }

                  variable "static_website" {
                    description = "Static website configuration. Defaults to disabled."
                    type        = list(map(string))
                    default     = [{
                      index_document = null
                      error_404_document = null
                    }]
                  }

                  output "BLOB_CONNECTION_STRING" {
                    description = "Blob storage connection string"
                    sensitive   = true
                    value       = azurerm_storage_account.sa.primary_connection_string
                  }

                  output "BLOB_WEB_ENDPOINT" {
                    description = "Blob storage static web endpoint"
                    value       = azurerm_storage_account.sa.primary_web_endpoint
                  }
                providerRef:
                  name: azure
                  namespace: default
            workload:
              definition:
                apiVersion: terraform.core.oam.dev/v1beta1
                kind: Configuration
        type: raw
      workflow:
        steps:
        - name: ""
          properties:
            name: fluxcd
            namespace: vela-system
          type: depends-on-app
        - name: ""
          type: apply-application
    status:
      rollout:
        batchRollingState: ""
        currentBatch: 0
        lastTargetAppRevision: ""
        rollingState: ""
        upgradedReadyReplicas: 0
        upgradedReplicas: 0
kind: ConfigMap
metadata:
  annotations:
    addons.oam.dev/description: Terraform Controller is a Kubernetes Controller for
      Terraform.
    addons.oam.dev/name: terraform
  labels:
    addons.oam.dev/type: terraform
  name: terraform
  namespace: {{.Values.systemDefinitionNamespace}}
