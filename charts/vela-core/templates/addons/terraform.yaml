apiVersion: v1
data:
  application: |
    apiVersion: core.oam.dev/v1beta1
    kind: Application
    metadata:
      annotations:
        addons.oam.dev/description: Terraform Controller is a Kubernetes Controller for
          Terraform.
      name: terraform
      namespace: vela-system
    spec:
      components:
      - name: ns-terraform-system
        properties:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: terraform-system
        type: raw
      - name: terraform-controller
        properties:
          chart: terraform-controller
          repoType: helm
          url: https://charts.kubevela.net/addons
          version: 0.2.4
        type: helm
      - name: alibaba-ack
        properties:
          apiVersion: core.oam.dev/v1beta1
          kind: ComponentDefinition
          metadata:
            annotations:
              definition.oam.dev/description: Terraform configuration for Alibaba Cloud
                ACK cluster
            labels:
              type: terraform
            name: alibaba-ack
            namespace: vela-system
          spec:
            schematic:
              terraform:
                configuration: |
                  module "kubernetes" {
                    source = "github.com/zzxwill/terraform-alicloud-kubernetes"
                    new_nat_gateway = true
                    vpc_name = var.vpc_name
                    vpc_cidr = var.vpc_cidr
                    vswitch_name_prefix = var.vswitch_name_prefix
                    vswitch_cidrs = var.vswitch_cidrs
                    master_instance_types = var.master_instance_types
                    worker_instance_types = var.worker_instance_types
                    k8s_pod_cidr = var.k8s_pod_cidr
                    k8s_service_cidr = var.k8s_service_cidr
                    k8s_worker_number = var.k8s_worker_number
                    cpu_core_count = var.cpu_core_count
                    memory_size = var.memory_size
                    zone_id = var.zone_id
                    k8s_version = var.k8s_version
                    k8s_name_prefix = var.k8s_name_prefix
                  }
                  ######################
                  # Instance types variables
                  ######################
                  variable "cpu_core_count" {
                    description = "CPU core count is used to fetch instance types."
                    type = number
                    default = 4
                  }
                  variable "memory_size" {
                    description = "Memory size used to fetch instance types."
                    type = number
                    default = 8
                  }
                  ######################
                  # VPC variables
                  ######################
                  variable "vpc_name" {
                    description = "The vpc name used to create a new vpc when 'vpc_id' is not specified. Default to variable `example_name`"
                    type = string
                    default = "tf-k8s-vpc"
                  }
                  variable "vpc_cidr" {
                    description = "The cidr block used to launch a new vpc when 'vpc_id' is not specified."
                    type = string
                    default = "10.0.0.0/8"
                  }
                  ######################
                  # VSwitch variables
                  ######################
                  variable "vswitch_name_prefix" {
                    type = string
                    description = "The vswitch name prefix used to create several new vswitches. Default to variable 'example_name'."
                    default = "tf-k8s-vsw"
                  }
                  variable "number_format" {
                    description = "The number format used to output."
                    type = string
                    default = "%02d"
                  }
                  variable "vswitch_ids" {
                    description = "List of existing vswitch id."
                    type = list
                    default = []
                  }
                  variable "vswitch_cidrs" {
                    description = "List of cidr blocks used to create several new vswitches when 'vswitch_ids' is not specified."
                    type = list
                    default = [
                      "10.1.0.0/16",
                      "10.2.0.0/16",
                      "10.3.0.0/16"]
                  }
                  variable "k8s_name_prefix" {
                    description = "The name prefix used to create several kubernetes clusters. Default to variable `example_name`"
                    type = string
                    default = "poc"
                  }
                  variable "new_nat_gateway" {
                    type = bool
                    description = "Whether to create a new nat gateway. In this template, a new nat gateway will create a nat gateway, eip and server snat entries."
                    default = true
                  }
                  variable "master_instance_types" {
                    description = "The ecs instance types used to launch master nodes."
                    type = list
                    default = [
                      # hongkong
                      "ecs.sn1ne.xlarge",
                      # hongkong
                      "ecs.c6.xlarge",
                      # hongkong
                      "ecs.c4.xlarge",
                      # hongkong
                      "ecs.c5.xlarge",
                      "ecs.n4.xlarge",
                      # "ecs.n1.large",
                      # "ecs.sn1.large",
                      # "ecs.s6-c1m2.xlarge",
                      # "ecs.c6e.xlarge"
                    ]
                  }
                  variable "worker_instance_types" {
                    description = "The ecs instance types used to launch worker nodes."
                    type = list
                    default = [
                      # hongkong
                      "ecs.sn1ne.xlarge",
                      # hongkong
                      "ecs.c6.xlarge",
                      # hongkong
                      "ecs.c4.xlarge",
                      # hongkong
                      "ecs.c6e.xlarge",
                      "ecs.n4.xlarge",
                      //    "ecs.n1.large",
                      //    "ecs.sn1.large",
                      //    "ecs.s6-c1m2.xlarge"
                    ]
                  }
                  variable "node_cidr_mask" {
                    type = number
                    description = "The node cidr block to specific how many pods can run on single node. Valid values: [24-28]."
                    default = 24
                  }
                  variable "enable_ssh" {
                    description = "Enable login to the node through SSH."
                    type = bool
                    default = true
                  }
                  variable "install_cloud_monitor" {
                    description = "Install cloud monitor agent on ECS."
                    type = bool
                    default = true
                  }
                  variable "cpu_policy" {
                    type = string
                    description = "kubelet cpu policy. Valid values: 'none','static'. Default to 'none'."
                    default = "none"
                  }
                  variable "proxy_mode" {
                    description = "Proxy mode is option of kube-proxy. Valid values: 'ipvs','iptables'. Default to 'iptables'."
                    type = string
                    default = "iptables"
                  }
                  variable "password" {
                    description = "The password of ECS instance."
                    type = string
                    default = "Just4Test"
                  }
                  variable "k8s_worker_number" {
                    description = "The number of worker nodes in kubernetes cluster."
                    type = number
                    default = 2
                  }
                  # k8s_pod_cidr is only for flannel network
                  variable "k8s_pod_cidr" {
                    description = "The kubernetes pod cidr block. It cannot be equals to vpc's or vswitch's and cannot be in them."
                    type = string
                    default = "172.20.0.0/16"
                  }
                  variable "k8s_service_cidr" {
                    description = "The kubernetes service cidr block. It cannot be equals to vpc's or vswitch's or pod's and cannot be in them."
                    type = string
                    default = "192.168.0.0/16"
                  }
                  variable "k8s_version" {
                    description = "The version of the kubernetes version.  Valid values: '1.16.6-aliyun.1','1.14.8-aliyun.1'. Default to '1.16.6-aliyun.1'."
                    type = string
                    default = "1.20.4-aliyun.1"
                  }
                  variable "zone_id" {
                    description = "Availability Zone ID"
                    type = string
                    default = "cn-hongkong-b"
                    # "cn-beijing-a"
                  }
                  output "name" {
                    value = module.kubernetes.name
                  }
                  output "kubeconfig" {
                    value = module.kubernetes.kubeconfig
                  }
                  output "cluster_ca_cert" {
                    value = module.kubernetes.cluster_ca_cert
                  }
                  output "client_cert" {
                    value = module.kubernetes.client_cert
                  }
                  output "client_key" {
                    value = module.kubernetes.client_key
                  }
                  output "api_server_internet" {
                    value = module.kubernetes.api_server_internet
                  }
            workload:
              definition:
                apiVersion: terraform.core.oam.dev/v1beta1
                kind: Configuration
        type: raw
      - name: alibaba-eip
        properties:
          apiVersion: core.oam.dev/v1alpha2
          kind: ComponentDefinition
          metadata:
            annotations:
              definition.oam.dev/description: Terraform configuration for Alibaba Cloud
                Elastic IP
            labels:
              type: terraform
            name: alibaba-eip
            namespace: vela-system
          spec:
            schematic:
              terraform:
                configuration: https://github.com/oam-dev/terraform-alibaba-eip.git
                type: remote
            workload:
              definition:
                apiVersion: terraform.core.oam.dev/v1beta1
                kind: Configuration
        type: raw
      - name: alibaba-oss
        properties:
          apiVersion: core.oam.dev/v1alpha2
          kind: ComponentDefinition
          metadata:
            annotations:
              definition.oam.dev/description: Terraform configuration for Alibaba Cloud
                OSS object
            labels:
              type: terraform
            name: alibaba-oss
            namespace: vela-system
          spec:
            schematic:
              terraform:
                configuration: "resource \"alicloud_oss_bucket\" \"bucket-acl\" {\n  bucket
                  = var.bucket\n  acl = var.acl\n}\noutput \"BUCKET_NAME\" {\n  value
                  = \"${alicloud_oss_bucket.bucket-acl.bucket}.${alicloud_oss_bucket.bucket-acl.extranet_endpoint}\"\n}\nvariable
                  \"bucket\" {\n  description = \"OSS bucket name\"\n  default = \"vela-website\"\n
                  \ type = string\n}\nvariable \"acl\" {\n  description = \"OSS bucket
                  ACL, supported 'private', 'public-read', 'public-read-write'\"\n  default
                  = \"private\"\n  type = string\n} \n"
            workload:
              definition:
                apiVersion: terraform.core.oam.dev/v1beta1
                kind: Configuration
        type: raw
      - name: alibaba-rds
        properties:
          apiVersion: core.oam.dev/v1alpha2
          kind: ComponentDefinition
          metadata:
            annotations:
              definition.oam.dev/description: Terraform configuration for Alibaba Cloud
                RDS object
            labels:
              type: terraform
            name: alibaba-rds
            namespace: vela-system
          spec:
            schematic:
              terraform:
                configuration: |
                  module "rds" {
                    source = "terraform-alicloud-modules/rds/alicloud"
                    engine = "MySQL"
                    engine_version = "8.0"
                    instance_type = "rds.mysql.c1.large"
                    instance_storage = "20"
                    instance_name = var.instance_name
                    account_name = var.account_name
                    password = var.password
                  }

                  output "DB_NAME" {
                    value = module.rds.this_db_instance_name
                  }
                  output "DB_USER" {
                    value = module.rds.this_db_database_account
                  }
                  output "DB_PORT" {
                    value = module.rds.this_db_instance_port
                  }
                  output "DB_HOST" {
                    value = module.rds.this_db_instance_connection_string
                  }
                  output "DB_PASSWORD" {
                    value = var.password
                  }

                  variable "instance_name" {
                    description = "RDS instance name"
                    type = string
                    default = "poc"
                  }

                  variable "account_name" {
                    description = "RDS instance user account name"
                    type = string
                    default = "oam"
                  }

                  variable "password" {
                    description = "RDS instance account password"
                    type = string
                    default = "Xyfff83jfewGGfaked"
                  }
            workload:
              definition:
                apiVersion: terraform.core.oam.dev/v1beta1
                kind: Configuration
        type: raw
      - name: azure-database-mariadb
        properties:
          apiVersion: core.oam.dev/v1alpha2
          kind: ComponentDefinition
          metadata:
            annotations:
              definition.oam.dev/description: Terraform configuration for Azure Database
                Mariadb
              provider: azure
            labels:
              type: terraform
            name: azure-database-mariadb
            namespace: vela-system
          spec:
            schematic:
              terraform:
                configuration: |
                  # Configure the Microsoft Azure Provider
                  provider "azurerm" {
                    features {}
                  }

                  resource "azurerm_resource_group" "example" {
                    name = var.resource_group
                    location = var.location
                  }

                  resource "azurerm_mariadb_server" "example" {
                    name = var.server_name
                    location = var.location
                    resource_group_name = azurerm_resource_group.example.name

                    sku_name = "B_Gen5_2"

                    storage_mb = 51200
                    backup_retention_days = 7
                    geo_redundant_backup_enabled = false

                    administrator_login = var.username
                    administrator_login_password = var.password
                    version = "10.2"
                    ssl_enforcement_enabled = true
                  }

                  resource "azurerm_mariadb_database" "example" {
                    name = var.db_name
                    resource_group_name = azurerm_resource_group.example.name
                    server_name = azurerm_mariadb_server.example.name
                    charset = "utf8"
                    collation = "utf8_general_ci"
                  }

                  variable "server_name" {
                    type = string
                    description = "mariadb server name"
                    default = "mariadb-svr-sample"
                  }

                  variable "db_name" {
                    default = "backend"
                    type = string
                    description = "Database instance name"
                  }

                  variable "username" {
                    default = "acctestun"
                    type = string
                    description = "Database instance username"
                  }

                  variable "password" {
                    default = "H@Sh1CoR3!faked"
                    type = string
                    description = "Database instance password"
                  }

                  variable "location" {
                    description = "Azure location"
                    type = string
                    default = "West Europe"
                  }

                  variable "resource_group" {
                    description = "Resource group"
                    type = string
                    default = "kubevela-group"
                  }

                  output "SERVER_NAME" {
                    value = var.server_name
                  }

                  output "DB_NAME" {
                    value = var.db_name
                  }
                  output "DB_USER" {
                    value = var.username
                  }
                  output "DB_PASSWORD" {
                    sensitive = true
                    value = var.password
                  }
                  output "DB_PORT" {
                    value = "3306"
                  }
                  output "DB_HOST" {
                    value = azurerm_mariadb_server.example.fqdn
                  }
                providerRef:
                  name: azure
                  namespace: default
            workload:
              definition:
                apiVersion: terraform.core.oam.dev/v1beta1
                kind: Configuration
        type: raw
      workflow:
        steps:
        - name: checking-depends-on
          properties:
            name: fluxcd
            namespace: vela-system
          type: depends-on-app
        - name: apply-ns
          properties:
            component: ns-terraform-system
          type: apply-component
        - name: apply-resources
          type: apply-remaining
    status: {}
kind: ConfigMap
metadata:
  annotations:
    addons.oam.dev/description: Terraform Controller is a Kubernetes Controller for
      Terraform.
    addons.oam.dev/name: terraform
  labels:
    addons.oam.dev/type: terraform
  name: terraform
  namespace: {{.Values.systemDefinitionNamespace}}
