# Code generated by KubeVela templates. DO NOT EDIT. Please edit the original cue file.
# Definition source cue file: vela-templates/definitions/internal/deploy.cue
apiVersion: core.oam.dev/v1beta1
kind: WorkflowStepDefinition
metadata:
  annotations:
    definition.oam.dev/description: Deploy components with policies.
  name: deploy
  namespace: {{ include "systemDefinitionNamespace" . }}
spec:
  schematic:
    cue:
      template: |
        import (
        	"vela/op"
        )

        deploy: op.#Steps & {
        	load: op.#Load @step(1)
        	_components: [ for k, v in load.value {v}]
        	loadPoliciesInOrder: op.#LoadPoliciesInOrder & {
        		if parameter.policies != _|_ {
        					input: parameter.policies
        				}
        	}                     @step(2)
        	_policies:            loadPoliciesInOrder.output
        	handleDeployPolicies: op.#HandleDeployPolicies & {
        		inputs: {
        			components: _components
        			policies:   _policies
        		}
        	}                   @step(3)
        	_decisions:         handleDeployPolicies.outputs.decisions
        	_patchedComponents: handleDeployPolicies.outputs.components
        	deploy:             op.#ApplyComponents & {
        		parallelism: parameter.parallelism
        		components: {
        			for decision in _decisions {
        				for key, comp in _patchedComponents {
        					"\(decision.cluster)-\(decision.namespace)-\(key)": {
        						value: comp
        						if decision.cluster != _|_ {
        							cluster: decision.cluster
        						}
        						if decision.namespace != _|_ {
        							namespace: decision.namespace
        						}
        					}
        				}
        			}
        		}
        	} @step(4)
        }
        parameter: {
        	auto: *true | bool
        	policies?: [...string]
        	parallelism: *5 | int
        }

