name: E2E MultiCluster Test

on:
  push:
    branches:
      - master
      - release-*
    tags:
      - v*
  workflow_dispatch: {}
  pull_request:
    branches:
      - master
      - release-*

env:
  # Common versions
  GO_VERSION: '1.17'
  GOLANGCI_VERSION: 'v1.38'
  KIND_VERSION: 'v0.7.0'
  KIND_IMAGE_VERSION: '[\"v1.20.7\"]'
  KIND_IMAGE_VERSIONS: '[\"v1.18.20\",\"v1.20.7\",\"v1.22.7\"]'

jobs:

  detect-noop:
    runs-on: ubuntu-20.04
    outputs:
      noop: ${{ steps.noop.outputs.should_skip }}
    steps:
      - name: Detect No-op Changes
        id: noop
        uses: fkirc/skip-duplicate-actions@v3.3.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          paths_ignore: '["**.md", "**.mdx", "**.png", "**.jpg"]'
          do_not_skip: '["workflow_dispatch", "schedule", "push"]'
          concurrent_skipping: false

  set-k8s-matrix:
    runs-on: ubuntu-20.04
    outputs:
      matrix: ${{ steps.set-k8s-matrix.outputs.matrix }}
    steps:
      - id: set-k8s-matrix
        run: |
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            echo "pushing tag: ${{ github.ref_name }}"
            echo "::set-output name=matrix::${{ env.KIND_IMAGE_VERSIONS }}"
          else
            echo "::set-output name=matrix::${{ env.KIND_IMAGE_VERSION }}"
          fi


  e2e-multi-cluster-tests:
    runs-on: aliyun
    needs: [ detect-noop,set-k8s-matrix ]
    if: needs.detect-noop.outputs.noop != 'true'
    strategy:
      matrix:
        k8s-version: ${{ fromJson(needs.set-k8s-matrix.outputs.matrix) }}


    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Setup Kind
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: ${{ env.KIND_VERSION }}
          skipClusterCreation: true

      - name: Setup Kind Cluster (Worker)
        run: |
          kind delete cluster --name worker
          kind create cluster --image kindest/node:${{ matrix.k8s-version }} --name worker
          kubectl version
          kubectl cluster-info
          kind get kubeconfig --name worker --internal > /tmp/worker.kubeconfig
          kind get kubeconfig --name worker > /tmp/worker.client.kubeconfig

      - name: Setup Kind Cluster (Hub)
        run: |
          kind delete cluster
          kind create cluster --image kindest/node:${{ matrix.k8s-version }}
          kubectl version
          kubectl cluster-info

      - name: Load Image to kind cluster (Hub)
        run: make kind-load

      - name: Cleanup for e2e tests
        run: |
          make e2e-cleanup
          make vela-cli
          make e2e-setup-core-auth
          make
          make setup-runtime-e2e-cluster

      - name: Run e2e multicluster tests
        run: |
          export PATH=$(pwd)/bin:$PATH
          make e2e-multicluster-test

      - name: Stop kubevela, get profile
        run: make end-e2e-core

      - name: Upload coverage report
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: /tmp/e2e-profile.out,/tmp/e2e_multicluster_test.out
          flags: e2e-multicluster-test
          name: codecov-umbrella

      - name: Clean e2e profile
        run: rm /tmp/e2e-profile.out

      - name: Cleanup image
        if: ${{ always() }}
        run: make image-cleanup
