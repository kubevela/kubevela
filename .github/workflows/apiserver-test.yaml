name: APIServer Unit Test & E2E Test

on:
  push:
    branches:
      - master
      - release-*
      - apiserver
  workflow_dispatch: {}
  pull_request:
    branches:
      - master
      - release-*
      - apiserver

env:
  # Common versions
  GO_VERSION: '1.17'
  GOLANGCI_VERSION: 'v1.38'
  KIND_VERSION: 'v0.7.0'

jobs:

  detect-noop:
    runs-on: ubuntu-20.04
    outputs:
      noop: ${{ steps.noop.outputs.should_skip }}
    steps:
      - name: Detect No-op Changes
        id: noop
        uses: fkirc/skip-duplicate-actions@v3.3.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          paths_ignore: '["**.md", "**.mdx", "**.png", "**.jpg"]'
          do_not_skip: '["workflow_dispatch", "schedule", "push"]'
          concurrent_skipping: false

  apiserver-unit-tests:
    runs-on: aliyun
    needs: detect-noop
    if: needs.detect-noop.outputs.noop != 'true'

    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Setup Kind
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: ${{ env.KIND_VERSION }}
          skipClusterCreation: true

      - name: Setup Kind Cluster (Worker)
        run: |
          kind delete cluster --name worker
          kind create cluster --image kindest/node:v1.18.15@sha256:5c1b980c4d0e0e8e7eb9f36f7df525d079a96169c8a8f20d8bd108c0d0889cc4 --name worker
          kubectl version
          kubectl cluster-info
          kind get kubeconfig --name worker --internal > /tmp/worker.kubeconfig
          kind get kubeconfig --name worker > /tmp/worker.client.kubeconfig

      - name: Setup Kind Cluster (Hub)
        run: |
          kind delete cluster
          kind create cluster --image kindest/node:v1.18.15@sha256:5c1b980c4d0e0e8e7eb9f36f7df525d079a96169c8a8f20d8bd108c0d0889cc4
          kubectl version
          kubectl cluster-info

      - name: Load Image to kind cluster
        run: make kind-load

      - name: Cleanup for e2e tests
        run: |
          make e2e-cleanup
          make vela-cli
          make e2e-setup-core
          bin/vela addon enable fluxcd
          timeout 600s bash -c -- 'while true; do kubectl get ns flux-system; if [ $? -eq 0 ] ; then break; else sleep 5; fi;done'
          kubectl wait --for=condition=Ready pod -l app.kubernetes.io/name=vela-core,app.kubernetes.io/instance=kubevela -n vela-system --timeout=600s
          kubectl wait --for=condition=Ready pod -l app=source-controller -n flux-system --timeout=600s
          kubectl wait --for=condition=Ready pod -l app=helm-controller -n flux-system --timeout=600s

      - name: Run apiserver unit test
        run: make unit-test-apiserver

      - name: Run apiserver e2e test
        run: |
          export ALIYUN_ACCESS_KEY_ID=${{ secrets.ALIYUN_ACCESS_KEY_ID }}
          export ALIYUN_ACCESS_KEY_SECRET=${{ secrets.ALIYUN_ACCESS_KEY_SECRET }}
          export GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          make e2e-apiserver-test

      - name: Stop kubevela, get profile
        run: make end-e2e-core

      - name: Upload coverage report
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.txt,/tmp/e2e_apiserver_test.out
          flags: apiserver-unittests
          name: codecov-umbrella

      - name: Clean e2e profile
        run: rm /tmp/e2e-profile.out

      - name: Cleanup image
        if: ${{ always() }}
        run: make image-cleanup