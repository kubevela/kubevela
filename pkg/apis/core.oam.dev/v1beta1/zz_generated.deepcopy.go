package v1beta1

import (
	"github.com/oam-dev/kubevela/apis/core.oam.dev/common"
	"k8s.io/apimachinery/pkg/runtime"
)

type TraitDefinitionSpec struct {
	WorkloadRefPath    string
	AppliesToWorkloads []string
	ConflictsWith      []string
	PodDisruptive      *bool
	Reference          string
	Schematic          *common.Schematic
	TemplateEndpoint   string
	Status             *common.Status
	Extension          *runtime.RawExtension
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TraitDefinitionSpec) DeepCopyInto(out *TraitDefinitionSpec) {
	*out = *in
	if in.WorkloadRefPath != "" {
		in, out := &in.WorkloadRefPath, &out.WorkloadRefPath
		*out = string(*in)
	}
	if in.AppliesToWorkloads != nil {
		in, out := &in.AppliesToWorkloads, &out.AppliesToWorkloads
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ConflictsWith != nil {
		in, out := &in.ConflictsWith, &out.ConflictsWith
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PodDisruptive != nil {
		in, out := &in.PodDisruptive, &out.PodDisruptive
		*out = new(bool)
		**out = **in
	}
	out.Reference = in.Reference
	if in.Schematic != nil {
		in, out := &in.Schematic, &out.Schematic
		*out = new(common.Schematic)
		(*in).DeepCopyInto(*out)
	}
	if in.TemplateEndpoint != "" {
		in, out := &in.TemplateEndpoint, &out.TemplateEndpoint
		*out = string(*in)
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(common.Status)
		(*in).DeepCopyInto(*out)
	}
	if in.Extension != nil {
		in, out := &in.Extension, &out.Extension
		*out = new(runtime.RawExtension)
		(*in).DeepCopyInto(*out)
	}
}
