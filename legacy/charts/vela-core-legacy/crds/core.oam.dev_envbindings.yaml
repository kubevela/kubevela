
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  name: envbindings.core.oam.dev
spec:
  group: core.oam.dev
  names:
    categories:
    - oam
    kind: EnvBinding
    listKind: EnvBindingList
    plural: envbindings
    shortNames:
    - envbind
    singular: envbinding
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.engine
      name: ENGINE
      type: string
    - jsonPath: .status.phase
      name: PHASE
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: EnvBinding is the Schema for the EnvBinding API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A EnvBindingSpec defines the desired state of a EnvBinding.
            properties:
              appTemplate:
                description: AppTemplate indicates the application template.
                type: object
                
                
              engine:
                description: ClusterManagementEngine represents a multi-cluster management
                  solution
                type: string
              envs:
                items:
                  description: EnvConfig is the configuration for different environments.
                  properties:
                    name:
                      type: string
                    patch:
                      description: EnvPatch specify the parameter configuration for
                        different environments
                      properties:
                        components:
                          items:
                            description: ApplicationComponent describe the component
                              of application
                            properties:
                              dependsOn:
                                items:
                                  type: string
                                type: array
                              externalRevision:
                                description: ExternalRevision specified the component
                                  revisionName
                                type: string
                              inputs:
                                description: StepInputs defines variable input of
                                  WorkflowStep
                                items:
                                  properties:
                                    from:
                                      type: string
                                    parameterKey:
                                      type: string
                                  required:
                                  - from
                                  - parameterKey
                                  type: object
                                type: array
                              name:
                                type: string
                              outputs:
                                description: StepOutputs defines output variable of
                                  WorkflowStep
                                items:
                                  properties:
                                    name:
                                      type: string
                                    valueFrom:
                                      type: string
                                  required:
                                  - name
                                  - valueFrom
                                  type: object
                                type: array
                              properties:
                                type: object
                                
                              scopes:
                                additionalProperties:
                                  type: string
                                description: scopes in ApplicationComponent defines
                                  the component-level scopes the format is <scope-type:scope-instance-name>
                                  pairs, the key represents type of `ScopeDefinition`
                                  while the value represent the name of scope instance.
                                type: object
                                
                              traits:
                                description: Traits define the trait of one component,
                                  the type must be array to keep the order.
                                items:
                                  description: ApplicationTrait defines the trait
                                    of application
                                  properties:
                                    properties:
                                      type: object
                                      
                                    type:
                                      type: string
                                  required:
                                  - type
                                  type: object
                                type: array
                              type:
                                type: string
                            required:
                            - name
                            - type
                            type: object
                          type: array
                      required:
                      - components
                      type: object
                    placement:
                      description: EnvPlacement defines the placement rules for an
                        app.
                      properties:
                        clusterSelector:
                          description: ClusterSelector defines the rules to select
                            a Cluster resource. Either name or labels is needed.
                          properties:
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels defines the label selector to select
                                the cluster.
                              type: object
                            name:
                              description: Name is the name of the cluster.
                              type: string
                          type: object
                        namespaceSelector:
                          description: NamespaceSelector defines the rules to select
                            a Namespace resource. Either name or labels is needed.
                          properties:
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels defines the label selector to select
                                the namespace.
                              type: object
                            name:
                              description: Name is the name of the namespace.
                              type: string
                          type: object
                      type: object
                    selector:
                      description: EnvSelector defines which components should this
                        env contains
                      properties:
                        components:
                          items:
                            type: string
                          type: array
                      type: object
                  required:
                  - name
                  - patch
                  type: object
                type: array
              outputResourcesTo:
                description: OutputResourcesTo specifies the namespace and name of
                  a ConfigMap which store the resources rendered after differentiated
                  configuration
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                type: object
            required:
            - appTemplate
            - envs
            type: object
          status:
            description: A EnvBindingStatus is the status of EnvBinding
            properties:
              clusterDecisions:
                items:
                  description: ClusterDecision recorded the mapping of environment
                    and cluster
                  properties:
                    cluster:
                      type: string
                    env:
                      type: string
                    namespace:
                      type: string
                  required:
                  - env
                  type: object
                type: array
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              phase:
                description: EnvBindingPhase is a label for the condition of a EnvBinding
                  at the current time
                type: string
              resourceTracker:
                description: ResourceTracker record the status of the ResourceTracker
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
